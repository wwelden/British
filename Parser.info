-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.1.1 from Parser.y
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_parse -> Dec                                (0)
	Dec -> Expr innit                                  (1)
	Dec -> hearye var is Expr innit                    (2)
	Dec -> colonize var is Expr innit                  (3)
	Expr -> int                                        (4)
	Expr -> real                                       (5)
	Expr -> fee                                        (6)
	Expr -> phi                                        (7)
	Expr -> pie                                        (8)
	Expr -> mole                                       (9)
	Expr -> ace                                        (10)
	Expr -> rank                                       (11)
	Expr -> string                                     (12)
	Expr -> var                                        (13)
	Expr -> '(' Expr ')'                               (14)
	Expr -> '[' Expr ']'                               (15)
	Expr -> sqrt Expr                                  (16)
	Expr -> '-' Expr                                   (17)
	Expr -> Expr '+' Expr                              (18)
	Expr -> Expr '-' Expr                              (19)
	Expr -> Expr '*' Expr                              (20)
	Expr -> Expr '/' Expr                              (21)
	Expr -> Expr '^' Expr                              (22)
	Expr -> Expr '%' Expr                              (23)
	Expr -> Expr '=' Expr                              (24)
	Expr -> Expr '>' Expr                              (25)
	Expr -> Expr '<' Expr                              (26)
	Expr -> Expr '/\\' Expr                            (27)
	Expr -> Expr '\\/' Expr                            (28)
	Expr -> Expr leq Expr                              (29)
	Expr -> Expr geq Expr                              (30)
	Expr -> supposing Expr hence Expr otherwise Expr   (31)
	Expr -> ifz Expr hence Expr otherwise Expr         (32)
	Expr -> oi var is Expr for Expr                    (33)
	Expr -> mate '(' Expr ')'                          (34)
	Expr -> bloke '(' Expr ')'                         (35)
	Expr -> '/' Expr ',' Expr '\\'                     (36)
	Expr -> '#'                                        (37)
	Expr -> cheers var '=>' Expr                       (38)
	Expr -> Expr '(' Expr ')'                          (39)
	Expr -> whilst Expr doeth Expr                     (40)
	Expr -> display Expr                               (41)
	Expr -> Expr '==' Expr                             (42)
	Expr -> '|' Expr '|'                               (43)
	Expr -> Expr '~' Expr                              (44)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	int            { IntTok $$ }
	real           { RealTok $$ }
	fee            { FeeTok }
	pie            { PieTok }
	phi            { PhiTok }
	mole           { MoleTok }
	'+'            { PlusTok }
	'-'            { MinusTok }
	'*'            { MultTok }
	'/'            { DivTok }
	'('            { LParenTok }
	')'            { RParenTok }
	'['            { LBracketTok }
	']'            { RBracketTok }
	'%'            { ModTok }
	'='            { EqTok }
	'^'            { ExpTok }
	'>'            { GTTok }
	'<'            { LTTok }
	leq            { LeqTok }
	geq            { GeqTok }
	sqrt           { SqrtTok }
	ifz            { IfzTok }
	for            { ForTok }
	ace            { AceTok }
	rank           { RankTok }
	var            { VarTok $$ }
	string         { StringTok $$ }
	supposing      { SupposingTok }
	hence          { HenceTok }
	otherwise      { OtherwiseTok }
	hearye         { HearyeTok }
	oi             { OiTok }
	is             { IsTok }
	'/\\'          { AndTok }
	'\\/'          { OrTok }
	innit          { InnitTok }
	colonize       { ColonizeTok }
	cheers         { CheersTok }
	mate           { MateTok }
	bloke          { BlokeTok }
	','            { CommaTok }
	'#'            { UnitTok }
	'=>'           { ArrowTok }
	'\\'           { BackslashTok }
	display        { DisplayTok }
	'=='           { EqEqTok }
	whilst         { WhilstTok }
	doeth          { DoethTok }
	'|'            { PipeTok }
	'~'            { TildeTok }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_parse    rule  0
	Dec             rules 1, 2, 3
	Expr            rules 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_parse -> . Dec                               (rule 0)

	int            shift, and enter state 3
	real           shift, and enter state 4
	fee            shift, and enter state 5
	pie            shift, and enter state 6
	phi            shift, and enter state 7
	mole           shift, and enter state 8
	'-'            shift, and enter state 9
	'/'            shift, and enter state 10
	'('            shift, and enter state 11
	'['            shift, and enter state 12
	sqrt           shift, and enter state 13
	ifz            shift, and enter state 14
	ace            shift, and enter state 15
	rank           shift, and enter state 16
	var            shift, and enter state 17
	string         shift, and enter state 18
	supposing      shift, and enter state 19
	hearye         shift, and enter state 29
	oi             shift, and enter state 20
	colonize       shift, and enter state 30
	cheers         shift, and enter state 21
	mate           shift, and enter state 22
	bloke          shift, and enter state 23
	'#'            shift, and enter state 24
	display        shift, and enter state 25
	whilst         shift, and enter state 26
	'|'            shift, and enter state 27

	Dec            goto state 28
	Expr           goto state 2

State 1

	Dec -> . Expr innit                                 (rule 1)

	int            shift, and enter state 3
	real           shift, and enter state 4
	fee            shift, and enter state 5
	pie            shift, and enter state 6
	phi            shift, and enter state 7
	mole           shift, and enter state 8
	'-'            shift, and enter state 9
	'/'            shift, and enter state 10
	'('            shift, and enter state 11
	'['            shift, and enter state 12
	sqrt           shift, and enter state 13
	ifz            shift, and enter state 14
	ace            shift, and enter state 15
	rank           shift, and enter state 16
	var            shift, and enter state 17
	string         shift, and enter state 18
	supposing      shift, and enter state 19
	oi             shift, and enter state 20
	cheers         shift, and enter state 21
	mate           shift, and enter state 22
	bloke          shift, and enter state 23
	'#'            shift, and enter state 24
	display        shift, and enter state 25
	whilst         shift, and enter state 26
	'|'            shift, and enter state 27

	Expr           goto state 2

State 2

	Dec -> Expr . innit                                 (rule 1)
	Expr -> Expr . '+' Expr                             (rule 18)
	Expr -> Expr . '-' Expr                             (rule 19)
	Expr -> Expr . '*' Expr                             (rule 20)
	Expr -> Expr . '/' Expr                             (rule 21)
	Expr -> Expr . '^' Expr                             (rule 22)
	Expr -> Expr . '%' Expr                             (rule 23)
	Expr -> Expr . '=' Expr                             (rule 24)
	Expr -> Expr . '>' Expr                             (rule 25)
	Expr -> Expr . '<' Expr                             (rule 26)
	Expr -> Expr . '/\\' Expr                           (rule 27)
	Expr -> Expr . '\\/' Expr                           (rule 28)
	Expr -> Expr . leq Expr                             (rule 29)
	Expr -> Expr . geq Expr                             (rule 30)
	Expr -> Expr . '(' Expr ')'                         (rule 39)
	Expr -> Expr . '==' Expr                            (rule 42)
	Expr -> Expr . '~' Expr                             (rule 44)

	'+'            shift, and enter state 47
	'-'            shift, and enter state 48
	'*'            shift, and enter state 49
	'/'            shift, and enter state 50
	'('            shift, and enter state 51
	'%'            shift, and enter state 52
	'='            shift, and enter state 53
	'^'            shift, and enter state 54
	'>'            shift, and enter state 55
	'<'            shift, and enter state 56
	leq            shift, and enter state 57
	geq            shift, and enter state 58
	'/\\'          shift, and enter state 59
	'\\/'          shift, and enter state 60
	innit          shift, and enter state 61
	'=='           shift, and enter state 62
	'~'            shift, and enter state 63


State 3

	Expr -> int .                                       (rule 4)

	'+'            reduce using rule 4
	'-'            reduce using rule 4
	'*'            reduce using rule 4
	'/'            reduce using rule 4
	'('            reduce using rule 4
	')'            reduce using rule 4
	']'            reduce using rule 4
	'%'            reduce using rule 4
	'='            reduce using rule 4
	'^'            reduce using rule 4
	'>'            reduce using rule 4
	'<'            reduce using rule 4
	leq            reduce using rule 4
	geq            reduce using rule 4
	for            reduce using rule 4
	hence          reduce using rule 4
	otherwise      reduce using rule 4
	'/\\'          reduce using rule 4
	'\\/'          reduce using rule 4
	innit          reduce using rule 4
	','            reduce using rule 4
	'\\'           reduce using rule 4
	'=='           reduce using rule 4
	doeth          reduce using rule 4
	'|'            reduce using rule 4
	'~'            reduce using rule 4


State 4

	Expr -> real .                                      (rule 5)

	'+'            reduce using rule 5
	'-'            reduce using rule 5
	'*'            reduce using rule 5
	'/'            reduce using rule 5
	'('            reduce using rule 5
	')'            reduce using rule 5
	']'            reduce using rule 5
	'%'            reduce using rule 5
	'='            reduce using rule 5
	'^'            reduce using rule 5
	'>'            reduce using rule 5
	'<'            reduce using rule 5
	leq            reduce using rule 5
	geq            reduce using rule 5
	for            reduce using rule 5
	hence          reduce using rule 5
	otherwise      reduce using rule 5
	'/\\'          reduce using rule 5
	'\\/'          reduce using rule 5
	innit          reduce using rule 5
	','            reduce using rule 5
	'\\'           reduce using rule 5
	'=='           reduce using rule 5
	doeth          reduce using rule 5
	'|'            reduce using rule 5
	'~'            reduce using rule 5


State 5

	Expr -> fee .                                       (rule 6)

	'+'            reduce using rule 6
	'-'            reduce using rule 6
	'*'            reduce using rule 6
	'/'            reduce using rule 6
	'('            reduce using rule 6
	')'            reduce using rule 6
	']'            reduce using rule 6
	'%'            reduce using rule 6
	'='            reduce using rule 6
	'^'            reduce using rule 6
	'>'            reduce using rule 6
	'<'            reduce using rule 6
	leq            reduce using rule 6
	geq            reduce using rule 6
	for            reduce using rule 6
	hence          reduce using rule 6
	otherwise      reduce using rule 6
	'/\\'          reduce using rule 6
	'\\/'          reduce using rule 6
	innit          reduce using rule 6
	','            reduce using rule 6
	'\\'           reduce using rule 6
	'=='           reduce using rule 6
	doeth          reduce using rule 6
	'|'            reduce using rule 6
	'~'            reduce using rule 6


State 6

	Expr -> pie .                                       (rule 8)

	'+'            reduce using rule 8
	'-'            reduce using rule 8
	'*'            reduce using rule 8
	'/'            reduce using rule 8
	'('            reduce using rule 8
	')'            reduce using rule 8
	']'            reduce using rule 8
	'%'            reduce using rule 8
	'='            reduce using rule 8
	'^'            reduce using rule 8
	'>'            reduce using rule 8
	'<'            reduce using rule 8
	leq            reduce using rule 8
	geq            reduce using rule 8
	for            reduce using rule 8
	hence          reduce using rule 8
	otherwise      reduce using rule 8
	'/\\'          reduce using rule 8
	'\\/'          reduce using rule 8
	innit          reduce using rule 8
	','            reduce using rule 8
	'\\'           reduce using rule 8
	'=='           reduce using rule 8
	doeth          reduce using rule 8
	'|'            reduce using rule 8
	'~'            reduce using rule 8


State 7

	Expr -> phi .                                       (rule 7)

	'+'            reduce using rule 7
	'-'            reduce using rule 7
	'*'            reduce using rule 7
	'/'            reduce using rule 7
	'('            reduce using rule 7
	')'            reduce using rule 7
	']'            reduce using rule 7
	'%'            reduce using rule 7
	'='            reduce using rule 7
	'^'            reduce using rule 7
	'>'            reduce using rule 7
	'<'            reduce using rule 7
	leq            reduce using rule 7
	geq            reduce using rule 7
	for            reduce using rule 7
	hence          reduce using rule 7
	otherwise      reduce using rule 7
	'/\\'          reduce using rule 7
	'\\/'          reduce using rule 7
	innit          reduce using rule 7
	','            reduce using rule 7
	'\\'           reduce using rule 7
	'=='           reduce using rule 7
	doeth          reduce using rule 7
	'|'            reduce using rule 7
	'~'            reduce using rule 7


State 8

	Expr -> mole .                                      (rule 9)

	'+'            reduce using rule 9
	'-'            reduce using rule 9
	'*'            reduce using rule 9
	'/'            reduce using rule 9
	'('            reduce using rule 9
	')'            reduce using rule 9
	']'            reduce using rule 9
	'%'            reduce using rule 9
	'='            reduce using rule 9
	'^'            reduce using rule 9
	'>'            reduce using rule 9
	'<'            reduce using rule 9
	leq            reduce using rule 9
	geq            reduce using rule 9
	for            reduce using rule 9
	hence          reduce using rule 9
	otherwise      reduce using rule 9
	'/\\'          reduce using rule 9
	'\\/'          reduce using rule 9
	innit          reduce using rule 9
	','            reduce using rule 9
	'\\'           reduce using rule 9
	'=='           reduce using rule 9
	doeth          reduce using rule 9
	'|'            reduce using rule 9
	'~'            reduce using rule 9


State 9

	Expr -> '-' . Expr                                  (rule 17)

	int            shift, and enter state 3
	real           shift, and enter state 4
	fee            shift, and enter state 5
	pie            shift, and enter state 6
	phi            shift, and enter state 7
	mole           shift, and enter state 8
	'-'            shift, and enter state 9
	'/'            shift, and enter state 10
	'('            shift, and enter state 11
	'['            shift, and enter state 12
	sqrt           shift, and enter state 13
	ifz            shift, and enter state 14
	ace            shift, and enter state 15
	rank           shift, and enter state 16
	var            shift, and enter state 17
	string         shift, and enter state 18
	supposing      shift, and enter state 19
	oi             shift, and enter state 20
	cheers         shift, and enter state 21
	mate           shift, and enter state 22
	bloke          shift, and enter state 23
	'#'            shift, and enter state 24
	display        shift, and enter state 25
	whilst         shift, and enter state 26
	'|'            shift, and enter state 27

	Expr           goto state 46

State 10

	Expr -> '/' . Expr ',' Expr '\\'                    (rule 36)

	int            shift, and enter state 3
	real           shift, and enter state 4
	fee            shift, and enter state 5
	pie            shift, and enter state 6
	phi            shift, and enter state 7
	mole           shift, and enter state 8
	'-'            shift, and enter state 9
	'/'            shift, and enter state 10
	'('            shift, and enter state 11
	'['            shift, and enter state 12
	sqrt           shift, and enter state 13
	ifz            shift, and enter state 14
	ace            shift, and enter state 15
	rank           shift, and enter state 16
	var            shift, and enter state 17
	string         shift, and enter state 18
	supposing      shift, and enter state 19
	oi             shift, and enter state 20
	cheers         shift, and enter state 21
	mate           shift, and enter state 22
	bloke          shift, and enter state 23
	'#'            shift, and enter state 24
	display        shift, and enter state 25
	whilst         shift, and enter state 26
	'|'            shift, and enter state 27

	Expr           goto state 45

State 11

	Expr -> '(' . Expr ')'                              (rule 14)

	int            shift, and enter state 3
	real           shift, and enter state 4
	fee            shift, and enter state 5
	pie            shift, and enter state 6
	phi            shift, and enter state 7
	mole           shift, and enter state 8
	'-'            shift, and enter state 9
	'/'            shift, and enter state 10
	'('            shift, and enter state 11
	'['            shift, and enter state 12
	sqrt           shift, and enter state 13
	ifz            shift, and enter state 14
	ace            shift, and enter state 15
	rank           shift, and enter state 16
	var            shift, and enter state 17
	string         shift, and enter state 18
	supposing      shift, and enter state 19
	oi             shift, and enter state 20
	cheers         shift, and enter state 21
	mate           shift, and enter state 22
	bloke          shift, and enter state 23
	'#'            shift, and enter state 24
	display        shift, and enter state 25
	whilst         shift, and enter state 26
	'|'            shift, and enter state 27

	Expr           goto state 44

State 12

	Expr -> '[' . Expr ']'                              (rule 15)

	int            shift, and enter state 3
	real           shift, and enter state 4
	fee            shift, and enter state 5
	pie            shift, and enter state 6
	phi            shift, and enter state 7
	mole           shift, and enter state 8
	'-'            shift, and enter state 9
	'/'            shift, and enter state 10
	'('            shift, and enter state 11
	'['            shift, and enter state 12
	sqrt           shift, and enter state 13
	ifz            shift, and enter state 14
	ace            shift, and enter state 15
	rank           shift, and enter state 16
	var            shift, and enter state 17
	string         shift, and enter state 18
	supposing      shift, and enter state 19
	oi             shift, and enter state 20
	cheers         shift, and enter state 21
	mate           shift, and enter state 22
	bloke          shift, and enter state 23
	'#'            shift, and enter state 24
	display        shift, and enter state 25
	whilst         shift, and enter state 26
	'|'            shift, and enter state 27

	Expr           goto state 43

State 13

	Expr -> sqrt . Expr                                 (rule 16)

	int            shift, and enter state 3
	real           shift, and enter state 4
	fee            shift, and enter state 5
	pie            shift, and enter state 6
	phi            shift, and enter state 7
	mole           shift, and enter state 8
	'-'            shift, and enter state 9
	'/'            shift, and enter state 10
	'('            shift, and enter state 11
	'['            shift, and enter state 12
	sqrt           shift, and enter state 13
	ifz            shift, and enter state 14
	ace            shift, and enter state 15
	rank           shift, and enter state 16
	var            shift, and enter state 17
	string         shift, and enter state 18
	supposing      shift, and enter state 19
	oi             shift, and enter state 20
	cheers         shift, and enter state 21
	mate           shift, and enter state 22
	bloke          shift, and enter state 23
	'#'            shift, and enter state 24
	display        shift, and enter state 25
	whilst         shift, and enter state 26
	'|'            shift, and enter state 27

	Expr           goto state 42

State 14

	Expr -> ifz . Expr hence Expr otherwise Expr        (rule 32)

	int            shift, and enter state 3
	real           shift, and enter state 4
	fee            shift, and enter state 5
	pie            shift, and enter state 6
	phi            shift, and enter state 7
	mole           shift, and enter state 8
	'-'            shift, and enter state 9
	'/'            shift, and enter state 10
	'('            shift, and enter state 11
	'['            shift, and enter state 12
	sqrt           shift, and enter state 13
	ifz            shift, and enter state 14
	ace            shift, and enter state 15
	rank           shift, and enter state 16
	var            shift, and enter state 17
	string         shift, and enter state 18
	supposing      shift, and enter state 19
	oi             shift, and enter state 20
	cheers         shift, and enter state 21
	mate           shift, and enter state 22
	bloke          shift, and enter state 23
	'#'            shift, and enter state 24
	display        shift, and enter state 25
	whilst         shift, and enter state 26
	'|'            shift, and enter state 27

	Expr           goto state 41

State 15

	Expr -> ace .                                       (rule 10)

	'+'            reduce using rule 10
	'-'            reduce using rule 10
	'*'            reduce using rule 10
	'/'            reduce using rule 10
	'('            reduce using rule 10
	')'            reduce using rule 10
	']'            reduce using rule 10
	'%'            reduce using rule 10
	'='            reduce using rule 10
	'^'            reduce using rule 10
	'>'            reduce using rule 10
	'<'            reduce using rule 10
	leq            reduce using rule 10
	geq            reduce using rule 10
	for            reduce using rule 10
	hence          reduce using rule 10
	otherwise      reduce using rule 10
	'/\\'          reduce using rule 10
	'\\/'          reduce using rule 10
	innit          reduce using rule 10
	','            reduce using rule 10
	'\\'           reduce using rule 10
	'=='           reduce using rule 10
	doeth          reduce using rule 10
	'|'            reduce using rule 10
	'~'            reduce using rule 10


State 16

	Expr -> rank .                                      (rule 11)

	'+'            reduce using rule 11
	'-'            reduce using rule 11
	'*'            reduce using rule 11
	'/'            reduce using rule 11
	'('            reduce using rule 11
	')'            reduce using rule 11
	']'            reduce using rule 11
	'%'            reduce using rule 11
	'='            reduce using rule 11
	'^'            reduce using rule 11
	'>'            reduce using rule 11
	'<'            reduce using rule 11
	leq            reduce using rule 11
	geq            reduce using rule 11
	for            reduce using rule 11
	hence          reduce using rule 11
	otherwise      reduce using rule 11
	'/\\'          reduce using rule 11
	'\\/'          reduce using rule 11
	innit          reduce using rule 11
	','            reduce using rule 11
	'\\'           reduce using rule 11
	'=='           reduce using rule 11
	doeth          reduce using rule 11
	'|'            reduce using rule 11
	'~'            reduce using rule 11


State 17

	Expr -> var .                                       (rule 13)

	'+'            reduce using rule 13
	'-'            reduce using rule 13
	'*'            reduce using rule 13
	'/'            reduce using rule 13
	'('            reduce using rule 13
	')'            reduce using rule 13
	']'            reduce using rule 13
	'%'            reduce using rule 13
	'='            reduce using rule 13
	'^'            reduce using rule 13
	'>'            reduce using rule 13
	'<'            reduce using rule 13
	leq            reduce using rule 13
	geq            reduce using rule 13
	for            reduce using rule 13
	hence          reduce using rule 13
	otherwise      reduce using rule 13
	'/\\'          reduce using rule 13
	'\\/'          reduce using rule 13
	innit          reduce using rule 13
	','            reduce using rule 13
	'\\'           reduce using rule 13
	'=='           reduce using rule 13
	doeth          reduce using rule 13
	'|'            reduce using rule 13
	'~'            reduce using rule 13


State 18

	Expr -> string .                                    (rule 12)

	'+'            reduce using rule 12
	'-'            reduce using rule 12
	'*'            reduce using rule 12
	'/'            reduce using rule 12
	'('            reduce using rule 12
	')'            reduce using rule 12
	']'            reduce using rule 12
	'%'            reduce using rule 12
	'='            reduce using rule 12
	'^'            reduce using rule 12
	'>'            reduce using rule 12
	'<'            reduce using rule 12
	leq            reduce using rule 12
	geq            reduce using rule 12
	for            reduce using rule 12
	hence          reduce using rule 12
	otherwise      reduce using rule 12
	'/\\'          reduce using rule 12
	'\\/'          reduce using rule 12
	innit          reduce using rule 12
	','            reduce using rule 12
	'\\'           reduce using rule 12
	'=='           reduce using rule 12
	doeth          reduce using rule 12
	'|'            reduce using rule 12
	'~'            reduce using rule 12


State 19

	Expr -> supposing . Expr hence Expr otherwise Expr    (rule 31)

	int            shift, and enter state 3
	real           shift, and enter state 4
	fee            shift, and enter state 5
	pie            shift, and enter state 6
	phi            shift, and enter state 7
	mole           shift, and enter state 8
	'-'            shift, and enter state 9
	'/'            shift, and enter state 10
	'('            shift, and enter state 11
	'['            shift, and enter state 12
	sqrt           shift, and enter state 13
	ifz            shift, and enter state 14
	ace            shift, and enter state 15
	rank           shift, and enter state 16
	var            shift, and enter state 17
	string         shift, and enter state 18
	supposing      shift, and enter state 19
	oi             shift, and enter state 20
	cheers         shift, and enter state 21
	mate           shift, and enter state 22
	bloke          shift, and enter state 23
	'#'            shift, and enter state 24
	display        shift, and enter state 25
	whilst         shift, and enter state 26
	'|'            shift, and enter state 27

	Expr           goto state 40

State 20

	Expr -> oi . var is Expr for Expr                   (rule 33)

	var            shift, and enter state 39


State 21

	Expr -> cheers . var '=>' Expr                      (rule 38)

	var            shift, and enter state 38


State 22

	Expr -> mate . '(' Expr ')'                         (rule 34)

	'('            shift, and enter state 37


State 23

	Expr -> bloke . '(' Expr ')'                        (rule 35)

	'('            shift, and enter state 36


State 24

	Expr -> '#' .                                       (rule 37)

	'+'            reduce using rule 37
	'-'            reduce using rule 37
	'*'            reduce using rule 37
	'/'            reduce using rule 37
	'('            reduce using rule 37
	')'            reduce using rule 37
	']'            reduce using rule 37
	'%'            reduce using rule 37
	'='            reduce using rule 37
	'^'            reduce using rule 37
	'>'            reduce using rule 37
	'<'            reduce using rule 37
	leq            reduce using rule 37
	geq            reduce using rule 37
	for            reduce using rule 37
	hence          reduce using rule 37
	otherwise      reduce using rule 37
	'/\\'          reduce using rule 37
	'\\/'          reduce using rule 37
	innit          reduce using rule 37
	','            reduce using rule 37
	'\\'           reduce using rule 37
	'=='           reduce using rule 37
	doeth          reduce using rule 37
	'|'            reduce using rule 37
	'~'            reduce using rule 37


State 25

	Expr -> display . Expr                              (rule 41)

	int            shift, and enter state 3
	real           shift, and enter state 4
	fee            shift, and enter state 5
	pie            shift, and enter state 6
	phi            shift, and enter state 7
	mole           shift, and enter state 8
	'-'            shift, and enter state 9
	'/'            shift, and enter state 10
	'('            shift, and enter state 11
	'['            shift, and enter state 12
	sqrt           shift, and enter state 13
	ifz            shift, and enter state 14
	ace            shift, and enter state 15
	rank           shift, and enter state 16
	var            shift, and enter state 17
	string         shift, and enter state 18
	supposing      shift, and enter state 19
	oi             shift, and enter state 20
	cheers         shift, and enter state 21
	mate           shift, and enter state 22
	bloke          shift, and enter state 23
	'#'            shift, and enter state 24
	display        shift, and enter state 25
	whilst         shift, and enter state 26
	'|'            shift, and enter state 27

	Expr           goto state 35

State 26

	Expr -> whilst . Expr doeth Expr                    (rule 40)

	int            shift, and enter state 3
	real           shift, and enter state 4
	fee            shift, and enter state 5
	pie            shift, and enter state 6
	phi            shift, and enter state 7
	mole           shift, and enter state 8
	'-'            shift, and enter state 9
	'/'            shift, and enter state 10
	'('            shift, and enter state 11
	'['            shift, and enter state 12
	sqrt           shift, and enter state 13
	ifz            shift, and enter state 14
	ace            shift, and enter state 15
	rank           shift, and enter state 16
	var            shift, and enter state 17
	string         shift, and enter state 18
	supposing      shift, and enter state 19
	oi             shift, and enter state 20
	cheers         shift, and enter state 21
	mate           shift, and enter state 22
	bloke          shift, and enter state 23
	'#'            shift, and enter state 24
	display        shift, and enter state 25
	whilst         shift, and enter state 26
	'|'            shift, and enter state 27

	Expr           goto state 34

State 27

	Expr -> '|' . Expr '|'                              (rule 43)

	int            shift, and enter state 3
	real           shift, and enter state 4
	fee            shift, and enter state 5
	pie            shift, and enter state 6
	phi            shift, and enter state 7
	mole           shift, and enter state 8
	'-'            shift, and enter state 9
	'/'            shift, and enter state 10
	'('            shift, and enter state 11
	'['            shift, and enter state 12
	sqrt           shift, and enter state 13
	ifz            shift, and enter state 14
	ace            shift, and enter state 15
	rank           shift, and enter state 16
	var            shift, and enter state 17
	string         shift, and enter state 18
	supposing      shift, and enter state 19
	oi             shift, and enter state 20
	cheers         shift, and enter state 21
	mate           shift, and enter state 22
	bloke          shift, and enter state 23
	'#'            shift, and enter state 24
	display        shift, and enter state 25
	whilst         shift, and enter state 26
	'|'            shift, and enter state 27

	Expr           goto state 33

State 28

	%start_parse -> Dec .                               (rule 0)

	%eof           accept


State 29

	Dec -> hearye . var is Expr innit                   (rule 2)

	var            shift, and enter state 32


State 30

	Dec -> colonize . var is Expr innit                 (rule 3)

	var            shift, and enter state 31


State 31

	Dec -> colonize var . is Expr innit                 (rule 3)

	is             shift, and enter state 92


State 32

	Dec -> hearye var . is Expr innit                   (rule 2)

	is             shift, and enter state 91


State 33

	Expr -> Expr . '+' Expr                             (rule 18)
	Expr -> Expr . '-' Expr                             (rule 19)
	Expr -> Expr . '*' Expr                             (rule 20)
	Expr -> Expr . '/' Expr                             (rule 21)
	Expr -> Expr . '^' Expr                             (rule 22)
	Expr -> Expr . '%' Expr                             (rule 23)
	Expr -> Expr . '=' Expr                             (rule 24)
	Expr -> Expr . '>' Expr                             (rule 25)
	Expr -> Expr . '<' Expr                             (rule 26)
	Expr -> Expr . '/\\' Expr                           (rule 27)
	Expr -> Expr . '\\/' Expr                           (rule 28)
	Expr -> Expr . leq Expr                             (rule 29)
	Expr -> Expr . geq Expr                             (rule 30)
	Expr -> Expr . '(' Expr ')'                         (rule 39)
	Expr -> Expr . '==' Expr                            (rule 42)
	Expr -> '|' Expr . '|'                              (rule 43)
	Expr -> Expr . '~' Expr                             (rule 44)

	'+'            shift, and enter state 47
	'-'            shift, and enter state 48
	'*'            shift, and enter state 49
	'/'            shift, and enter state 50
	'('            shift, and enter state 51
	'%'            shift, and enter state 52
	'='            shift, and enter state 53
	'^'            shift, and enter state 54
	'>'            shift, and enter state 55
	'<'            shift, and enter state 56
	leq            shift, and enter state 57
	geq            shift, and enter state 58
	'/\\'          shift, and enter state 59
	'\\/'          shift, and enter state 60
	'=='           shift, and enter state 62
	'|'            shift, and enter state 90
	'~'            shift, and enter state 63


State 34

	Expr -> Expr . '+' Expr                             (rule 18)
	Expr -> Expr . '-' Expr                             (rule 19)
	Expr -> Expr . '*' Expr                             (rule 20)
	Expr -> Expr . '/' Expr                             (rule 21)
	Expr -> Expr . '^' Expr                             (rule 22)
	Expr -> Expr . '%' Expr                             (rule 23)
	Expr -> Expr . '=' Expr                             (rule 24)
	Expr -> Expr . '>' Expr                             (rule 25)
	Expr -> Expr . '<' Expr                             (rule 26)
	Expr -> Expr . '/\\' Expr                           (rule 27)
	Expr -> Expr . '\\/' Expr                           (rule 28)
	Expr -> Expr . leq Expr                             (rule 29)
	Expr -> Expr . geq Expr                             (rule 30)
	Expr -> Expr . '(' Expr ')'                         (rule 39)
	Expr -> whilst Expr . doeth Expr                    (rule 40)
	Expr -> Expr . '==' Expr                            (rule 42)
	Expr -> Expr . '~' Expr                             (rule 44)

	'+'            shift, and enter state 47
	'-'            shift, and enter state 48
	'*'            shift, and enter state 49
	'/'            shift, and enter state 50
	'('            shift, and enter state 51
	'%'            shift, and enter state 52
	'='            shift, and enter state 53
	'^'            shift, and enter state 54
	'>'            shift, and enter state 55
	'<'            shift, and enter state 56
	leq            shift, and enter state 57
	geq            shift, and enter state 58
	'/\\'          shift, and enter state 59
	'\\/'          shift, and enter state 60
	'=='           shift, and enter state 62
	doeth          shift, and enter state 89
	'~'            shift, and enter state 63


State 35

	Expr -> Expr . '+' Expr                             (rule 18)
	Expr -> Expr . '-' Expr                             (rule 19)
	Expr -> Expr . '*' Expr                             (rule 20)
	Expr -> Expr . '/' Expr                             (rule 21)
	Expr -> Expr . '^' Expr                             (rule 22)
	Expr -> Expr . '%' Expr                             (rule 23)
	Expr -> Expr . '=' Expr                             (rule 24)
	Expr -> Expr . '>' Expr                             (rule 25)
	Expr -> Expr . '<' Expr                             (rule 26)
	Expr -> Expr . '/\\' Expr                           (rule 27)
	Expr -> Expr . '\\/' Expr                           (rule 28)
	Expr -> Expr . leq Expr                             (rule 29)
	Expr -> Expr . geq Expr                             (rule 30)
	Expr -> Expr . '(' Expr ')'                         (rule 39)
	Expr -> display Expr .                              (rule 41)
	Expr -> Expr . '==' Expr                            (rule 42)
	Expr -> Expr . '~' Expr                             (rule 44)

	'+'            shift, and enter state 47
	'-'            shift, and enter state 48
	'*'            shift, and enter state 49
	'/'            shift, and enter state 50
	'('            shift, and enter state 51
	')'            reduce using rule 41
	']'            reduce using rule 41
	'%'            shift, and enter state 52
	'='            shift, and enter state 53
	'^'            shift, and enter state 54
	'>'            shift, and enter state 55
	'<'            shift, and enter state 56
	leq            shift, and enter state 57
	geq            shift, and enter state 58
	for            reduce using rule 41
	hence          reduce using rule 41
	otherwise      reduce using rule 41
	'/\\'          shift, and enter state 59
	'\\/'          shift, and enter state 60
	innit          reduce using rule 41
	','            reduce using rule 41
	'\\'           reduce using rule 41
	'=='           shift, and enter state 62
	doeth          reduce using rule 41
	'|'            reduce using rule 41
	'~'            shift, and enter state 63


State 36

	Expr -> bloke '(' . Expr ')'                        (rule 35)

	int            shift, and enter state 3
	real           shift, and enter state 4
	fee            shift, and enter state 5
	pie            shift, and enter state 6
	phi            shift, and enter state 7
	mole           shift, and enter state 8
	'-'            shift, and enter state 9
	'/'            shift, and enter state 10
	'('            shift, and enter state 11
	'['            shift, and enter state 12
	sqrt           shift, and enter state 13
	ifz            shift, and enter state 14
	ace            shift, and enter state 15
	rank           shift, and enter state 16
	var            shift, and enter state 17
	string         shift, and enter state 18
	supposing      shift, and enter state 19
	oi             shift, and enter state 20
	cheers         shift, and enter state 21
	mate           shift, and enter state 22
	bloke          shift, and enter state 23
	'#'            shift, and enter state 24
	display        shift, and enter state 25
	whilst         shift, and enter state 26
	'|'            shift, and enter state 27

	Expr           goto state 88

State 37

	Expr -> mate '(' . Expr ')'                         (rule 34)

	int            shift, and enter state 3
	real           shift, and enter state 4
	fee            shift, and enter state 5
	pie            shift, and enter state 6
	phi            shift, and enter state 7
	mole           shift, and enter state 8
	'-'            shift, and enter state 9
	'/'            shift, and enter state 10
	'('            shift, and enter state 11
	'['            shift, and enter state 12
	sqrt           shift, and enter state 13
	ifz            shift, and enter state 14
	ace            shift, and enter state 15
	rank           shift, and enter state 16
	var            shift, and enter state 17
	string         shift, and enter state 18
	supposing      shift, and enter state 19
	oi             shift, and enter state 20
	cheers         shift, and enter state 21
	mate           shift, and enter state 22
	bloke          shift, and enter state 23
	'#'            shift, and enter state 24
	display        shift, and enter state 25
	whilst         shift, and enter state 26
	'|'            shift, and enter state 27

	Expr           goto state 87

State 38

	Expr -> cheers var . '=>' Expr                      (rule 38)

	'=>'           shift, and enter state 86


State 39

	Expr -> oi var . is Expr for Expr                   (rule 33)

	is             shift, and enter state 85


State 40

	Expr -> Expr . '+' Expr                             (rule 18)
	Expr -> Expr . '-' Expr                             (rule 19)
	Expr -> Expr . '*' Expr                             (rule 20)
	Expr -> Expr . '/' Expr                             (rule 21)
	Expr -> Expr . '^' Expr                             (rule 22)
	Expr -> Expr . '%' Expr                             (rule 23)
	Expr -> Expr . '=' Expr                             (rule 24)
	Expr -> Expr . '>' Expr                             (rule 25)
	Expr -> Expr . '<' Expr                             (rule 26)
	Expr -> Expr . '/\\' Expr                           (rule 27)
	Expr -> Expr . '\\/' Expr                           (rule 28)
	Expr -> Expr . leq Expr                             (rule 29)
	Expr -> Expr . geq Expr                             (rule 30)
	Expr -> supposing Expr . hence Expr otherwise Expr    (rule 31)
	Expr -> Expr . '(' Expr ')'                         (rule 39)
	Expr -> Expr . '==' Expr                            (rule 42)
	Expr -> Expr . '~' Expr                             (rule 44)

	'+'            shift, and enter state 47
	'-'            shift, and enter state 48
	'*'            shift, and enter state 49
	'/'            shift, and enter state 50
	'('            shift, and enter state 51
	'%'            shift, and enter state 52
	'='            shift, and enter state 53
	'^'            shift, and enter state 54
	'>'            shift, and enter state 55
	'<'            shift, and enter state 56
	leq            shift, and enter state 57
	geq            shift, and enter state 58
	hence          shift, and enter state 84
	'/\\'          shift, and enter state 59
	'\\/'          shift, and enter state 60
	'=='           shift, and enter state 62
	'~'            shift, and enter state 63


State 41

	Expr -> Expr . '+' Expr                             (rule 18)
	Expr -> Expr . '-' Expr                             (rule 19)
	Expr -> Expr . '*' Expr                             (rule 20)
	Expr -> Expr . '/' Expr                             (rule 21)
	Expr -> Expr . '^' Expr                             (rule 22)
	Expr -> Expr . '%' Expr                             (rule 23)
	Expr -> Expr . '=' Expr                             (rule 24)
	Expr -> Expr . '>' Expr                             (rule 25)
	Expr -> Expr . '<' Expr                             (rule 26)
	Expr -> Expr . '/\\' Expr                           (rule 27)
	Expr -> Expr . '\\/' Expr                           (rule 28)
	Expr -> Expr . leq Expr                             (rule 29)
	Expr -> Expr . geq Expr                             (rule 30)
	Expr -> ifz Expr . hence Expr otherwise Expr        (rule 32)
	Expr -> Expr . '(' Expr ')'                         (rule 39)
	Expr -> Expr . '==' Expr                            (rule 42)
	Expr -> Expr . '~' Expr                             (rule 44)

	'+'            shift, and enter state 47
	'-'            shift, and enter state 48
	'*'            shift, and enter state 49
	'/'            shift, and enter state 50
	'('            shift, and enter state 51
	'%'            shift, and enter state 52
	'='            shift, and enter state 53
	'^'            shift, and enter state 54
	'>'            shift, and enter state 55
	'<'            shift, and enter state 56
	leq            shift, and enter state 57
	geq            shift, and enter state 58
	hence          shift, and enter state 83
	'/\\'          shift, and enter state 59
	'\\/'          shift, and enter state 60
	'=='           shift, and enter state 62
	'~'            shift, and enter state 63


State 42

	Expr -> sqrt Expr .                                 (rule 16)
	Expr -> Expr . '+' Expr                             (rule 18)
	Expr -> Expr . '-' Expr                             (rule 19)
	Expr -> Expr . '*' Expr                             (rule 20)
	Expr -> Expr . '/' Expr                             (rule 21)
	Expr -> Expr . '^' Expr                             (rule 22)
	Expr -> Expr . '%' Expr                             (rule 23)
	Expr -> Expr . '=' Expr                             (rule 24)
	Expr -> Expr . '>' Expr                             (rule 25)
	Expr -> Expr . '<' Expr                             (rule 26)
	Expr -> Expr . '/\\' Expr                           (rule 27)
	Expr -> Expr . '\\/' Expr                           (rule 28)
	Expr -> Expr . leq Expr                             (rule 29)
	Expr -> Expr . geq Expr                             (rule 30)
	Expr -> Expr . '(' Expr ')'                         (rule 39)
	Expr -> Expr . '==' Expr                            (rule 42)
	Expr -> Expr . '~' Expr                             (rule 44)

	'+'            reduce using rule 16
	'-'            reduce using rule 16
	'*'            reduce using rule 16
	'/'            reduce using rule 16
	'('            shift, and enter state 51
	')'            reduce using rule 16
	']'            reduce using rule 16
	'%'            reduce using rule 16
	'='            reduce using rule 16
	'^'            reduce using rule 16
	'>'            reduce using rule 16
	'<'            reduce using rule 16
	leq            reduce using rule 16
	geq            reduce using rule 16
	for            reduce using rule 16
	hence          reduce using rule 16
	otherwise      reduce using rule 16
	'/\\'          reduce using rule 16
	'\\/'          reduce using rule 16
	innit          reduce using rule 16
	','            reduce using rule 16
	'\\'           reduce using rule 16
	'=='           reduce using rule 16
	doeth          reduce using rule 16
	'|'            reduce using rule 16
	'~'            reduce using rule 16


State 43

	Expr -> '[' Expr . ']'                              (rule 15)
	Expr -> Expr . '+' Expr                             (rule 18)
	Expr -> Expr . '-' Expr                             (rule 19)
	Expr -> Expr . '*' Expr                             (rule 20)
	Expr -> Expr . '/' Expr                             (rule 21)
	Expr -> Expr . '^' Expr                             (rule 22)
	Expr -> Expr . '%' Expr                             (rule 23)
	Expr -> Expr . '=' Expr                             (rule 24)
	Expr -> Expr . '>' Expr                             (rule 25)
	Expr -> Expr . '<' Expr                             (rule 26)
	Expr -> Expr . '/\\' Expr                           (rule 27)
	Expr -> Expr . '\\/' Expr                           (rule 28)
	Expr -> Expr . leq Expr                             (rule 29)
	Expr -> Expr . geq Expr                             (rule 30)
	Expr -> Expr . '(' Expr ')'                         (rule 39)
	Expr -> Expr . '==' Expr                            (rule 42)
	Expr -> Expr . '~' Expr                             (rule 44)

	'+'            shift, and enter state 47
	'-'            shift, and enter state 48
	'*'            shift, and enter state 49
	'/'            shift, and enter state 50
	'('            shift, and enter state 51
	']'            shift, and enter state 82
	'%'            shift, and enter state 52
	'='            shift, and enter state 53
	'^'            shift, and enter state 54
	'>'            shift, and enter state 55
	'<'            shift, and enter state 56
	leq            shift, and enter state 57
	geq            shift, and enter state 58
	'/\\'          shift, and enter state 59
	'\\/'          shift, and enter state 60
	'=='           shift, and enter state 62
	'~'            shift, and enter state 63


State 44

	Expr -> '(' Expr . ')'                              (rule 14)
	Expr -> Expr . '+' Expr                             (rule 18)
	Expr -> Expr . '-' Expr                             (rule 19)
	Expr -> Expr . '*' Expr                             (rule 20)
	Expr -> Expr . '/' Expr                             (rule 21)
	Expr -> Expr . '^' Expr                             (rule 22)
	Expr -> Expr . '%' Expr                             (rule 23)
	Expr -> Expr . '=' Expr                             (rule 24)
	Expr -> Expr . '>' Expr                             (rule 25)
	Expr -> Expr . '<' Expr                             (rule 26)
	Expr -> Expr . '/\\' Expr                           (rule 27)
	Expr -> Expr . '\\/' Expr                           (rule 28)
	Expr -> Expr . leq Expr                             (rule 29)
	Expr -> Expr . geq Expr                             (rule 30)
	Expr -> Expr . '(' Expr ')'                         (rule 39)
	Expr -> Expr . '==' Expr                            (rule 42)
	Expr -> Expr . '~' Expr                             (rule 44)

	'+'            shift, and enter state 47
	'-'            shift, and enter state 48
	'*'            shift, and enter state 49
	'/'            shift, and enter state 50
	'('            shift, and enter state 51
	')'            shift, and enter state 81
	'%'            shift, and enter state 52
	'='            shift, and enter state 53
	'^'            shift, and enter state 54
	'>'            shift, and enter state 55
	'<'            shift, and enter state 56
	leq            shift, and enter state 57
	geq            shift, and enter state 58
	'/\\'          shift, and enter state 59
	'\\/'          shift, and enter state 60
	'=='           shift, and enter state 62
	'~'            shift, and enter state 63


State 45

	Expr -> Expr . '+' Expr                             (rule 18)
	Expr -> Expr . '-' Expr                             (rule 19)
	Expr -> Expr . '*' Expr                             (rule 20)
	Expr -> Expr . '/' Expr                             (rule 21)
	Expr -> Expr . '^' Expr                             (rule 22)
	Expr -> Expr . '%' Expr                             (rule 23)
	Expr -> Expr . '=' Expr                             (rule 24)
	Expr -> Expr . '>' Expr                             (rule 25)
	Expr -> Expr . '<' Expr                             (rule 26)
	Expr -> Expr . '/\\' Expr                           (rule 27)
	Expr -> Expr . '\\/' Expr                           (rule 28)
	Expr -> Expr . leq Expr                             (rule 29)
	Expr -> Expr . geq Expr                             (rule 30)
	Expr -> '/' Expr . ',' Expr '\\'                    (rule 36)
	Expr -> Expr . '(' Expr ')'                         (rule 39)
	Expr -> Expr . '==' Expr                            (rule 42)
	Expr -> Expr . '~' Expr                             (rule 44)

	'+'            shift, and enter state 47
	'-'            shift, and enter state 48
	'*'            shift, and enter state 49
	'/'            shift, and enter state 50
	'('            shift, and enter state 51
	'%'            shift, and enter state 52
	'='            shift, and enter state 53
	'^'            shift, and enter state 54
	'>'            shift, and enter state 55
	'<'            shift, and enter state 56
	leq            shift, and enter state 57
	geq            shift, and enter state 58
	'/\\'          shift, and enter state 59
	'\\/'          shift, and enter state 60
	','            shift, and enter state 80
	'=='           shift, and enter state 62
	'~'            shift, and enter state 63


State 46

	Expr -> '-' Expr .                                  (rule 17)
	Expr -> Expr . '+' Expr                             (rule 18)
	Expr -> Expr . '-' Expr                             (rule 19)
	Expr -> Expr . '*' Expr                             (rule 20)
	Expr -> Expr . '/' Expr                             (rule 21)
	Expr -> Expr . '^' Expr                             (rule 22)
	Expr -> Expr . '%' Expr                             (rule 23)
	Expr -> Expr . '=' Expr                             (rule 24)
	Expr -> Expr . '>' Expr                             (rule 25)
	Expr -> Expr . '<' Expr                             (rule 26)
	Expr -> Expr . '/\\' Expr                           (rule 27)
	Expr -> Expr . '\\/' Expr                           (rule 28)
	Expr -> Expr . leq Expr                             (rule 29)
	Expr -> Expr . geq Expr                             (rule 30)
	Expr -> Expr . '(' Expr ')'                         (rule 39)
	Expr -> Expr . '==' Expr                            (rule 42)
	Expr -> Expr . '~' Expr                             (rule 44)

	'+'            reduce using rule 17
	'-'            reduce using rule 17
	'*'            reduce using rule 17
	'/'            reduce using rule 17
	'('            shift, and enter state 51
	')'            reduce using rule 17
	']'            reduce using rule 17
	'%'            reduce using rule 17
	'='            reduce using rule 17
	'^'            reduce using rule 17
	'>'            reduce using rule 17
	'<'            reduce using rule 17
	leq            reduce using rule 17
	geq            reduce using rule 17
	for            reduce using rule 17
	hence          reduce using rule 17
	otherwise      reduce using rule 17
	'/\\'          reduce using rule 17
	'\\/'          reduce using rule 17
	innit          reduce using rule 17
	','            reduce using rule 17
	'\\'           reduce using rule 17
	'=='           reduce using rule 17
	doeth          reduce using rule 17
	'|'            reduce using rule 17
	'~'            reduce using rule 17


State 47

	Expr -> Expr '+' . Expr                             (rule 18)

	int            shift, and enter state 3
	real           shift, and enter state 4
	fee            shift, and enter state 5
	pie            shift, and enter state 6
	phi            shift, and enter state 7
	mole           shift, and enter state 8
	'-'            shift, and enter state 9
	'/'            shift, and enter state 10
	'('            shift, and enter state 11
	'['            shift, and enter state 12
	sqrt           shift, and enter state 13
	ifz            shift, and enter state 14
	ace            shift, and enter state 15
	rank           shift, and enter state 16
	var            shift, and enter state 17
	string         shift, and enter state 18
	supposing      shift, and enter state 19
	oi             shift, and enter state 20
	cheers         shift, and enter state 21
	mate           shift, and enter state 22
	bloke          shift, and enter state 23
	'#'            shift, and enter state 24
	display        shift, and enter state 25
	whilst         shift, and enter state 26
	'|'            shift, and enter state 27

	Expr           goto state 79

State 48

	Expr -> Expr '-' . Expr                             (rule 19)

	int            shift, and enter state 3
	real           shift, and enter state 4
	fee            shift, and enter state 5
	pie            shift, and enter state 6
	phi            shift, and enter state 7
	mole           shift, and enter state 8
	'-'            shift, and enter state 9
	'/'            shift, and enter state 10
	'('            shift, and enter state 11
	'['            shift, and enter state 12
	sqrt           shift, and enter state 13
	ifz            shift, and enter state 14
	ace            shift, and enter state 15
	rank           shift, and enter state 16
	var            shift, and enter state 17
	string         shift, and enter state 18
	supposing      shift, and enter state 19
	oi             shift, and enter state 20
	cheers         shift, and enter state 21
	mate           shift, and enter state 22
	bloke          shift, and enter state 23
	'#'            shift, and enter state 24
	display        shift, and enter state 25
	whilst         shift, and enter state 26
	'|'            shift, and enter state 27

	Expr           goto state 78

State 49

	Expr -> Expr '*' . Expr                             (rule 20)

	int            shift, and enter state 3
	real           shift, and enter state 4
	fee            shift, and enter state 5
	pie            shift, and enter state 6
	phi            shift, and enter state 7
	mole           shift, and enter state 8
	'-'            shift, and enter state 9
	'/'            shift, and enter state 10
	'('            shift, and enter state 11
	'['            shift, and enter state 12
	sqrt           shift, and enter state 13
	ifz            shift, and enter state 14
	ace            shift, and enter state 15
	rank           shift, and enter state 16
	var            shift, and enter state 17
	string         shift, and enter state 18
	supposing      shift, and enter state 19
	oi             shift, and enter state 20
	cheers         shift, and enter state 21
	mate           shift, and enter state 22
	bloke          shift, and enter state 23
	'#'            shift, and enter state 24
	display        shift, and enter state 25
	whilst         shift, and enter state 26
	'|'            shift, and enter state 27

	Expr           goto state 77

State 50

	Expr -> Expr '/' . Expr                             (rule 21)

	int            shift, and enter state 3
	real           shift, and enter state 4
	fee            shift, and enter state 5
	pie            shift, and enter state 6
	phi            shift, and enter state 7
	mole           shift, and enter state 8
	'-'            shift, and enter state 9
	'/'            shift, and enter state 10
	'('            shift, and enter state 11
	'['            shift, and enter state 12
	sqrt           shift, and enter state 13
	ifz            shift, and enter state 14
	ace            shift, and enter state 15
	rank           shift, and enter state 16
	var            shift, and enter state 17
	string         shift, and enter state 18
	supposing      shift, and enter state 19
	oi             shift, and enter state 20
	cheers         shift, and enter state 21
	mate           shift, and enter state 22
	bloke          shift, and enter state 23
	'#'            shift, and enter state 24
	display        shift, and enter state 25
	whilst         shift, and enter state 26
	'|'            shift, and enter state 27

	Expr           goto state 76

State 51

	Expr -> Expr '(' . Expr ')'                         (rule 39)

	int            shift, and enter state 3
	real           shift, and enter state 4
	fee            shift, and enter state 5
	pie            shift, and enter state 6
	phi            shift, and enter state 7
	mole           shift, and enter state 8
	'-'            shift, and enter state 9
	'/'            shift, and enter state 10
	'('            shift, and enter state 11
	'['            shift, and enter state 12
	sqrt           shift, and enter state 13
	ifz            shift, and enter state 14
	ace            shift, and enter state 15
	rank           shift, and enter state 16
	var            shift, and enter state 17
	string         shift, and enter state 18
	supposing      shift, and enter state 19
	oi             shift, and enter state 20
	cheers         shift, and enter state 21
	mate           shift, and enter state 22
	bloke          shift, and enter state 23
	'#'            shift, and enter state 24
	display        shift, and enter state 25
	whilst         shift, and enter state 26
	'|'            shift, and enter state 27

	Expr           goto state 75

State 52

	Expr -> Expr '%' . Expr                             (rule 23)

	int            shift, and enter state 3
	real           shift, and enter state 4
	fee            shift, and enter state 5
	pie            shift, and enter state 6
	phi            shift, and enter state 7
	mole           shift, and enter state 8
	'-'            shift, and enter state 9
	'/'            shift, and enter state 10
	'('            shift, and enter state 11
	'['            shift, and enter state 12
	sqrt           shift, and enter state 13
	ifz            shift, and enter state 14
	ace            shift, and enter state 15
	rank           shift, and enter state 16
	var            shift, and enter state 17
	string         shift, and enter state 18
	supposing      shift, and enter state 19
	oi             shift, and enter state 20
	cheers         shift, and enter state 21
	mate           shift, and enter state 22
	bloke          shift, and enter state 23
	'#'            shift, and enter state 24
	display        shift, and enter state 25
	whilst         shift, and enter state 26
	'|'            shift, and enter state 27

	Expr           goto state 74

State 53

	Expr -> Expr '=' . Expr                             (rule 24)

	int            shift, and enter state 3
	real           shift, and enter state 4
	fee            shift, and enter state 5
	pie            shift, and enter state 6
	phi            shift, and enter state 7
	mole           shift, and enter state 8
	'-'            shift, and enter state 9
	'/'            shift, and enter state 10
	'('            shift, and enter state 11
	'['            shift, and enter state 12
	sqrt           shift, and enter state 13
	ifz            shift, and enter state 14
	ace            shift, and enter state 15
	rank           shift, and enter state 16
	var            shift, and enter state 17
	string         shift, and enter state 18
	supposing      shift, and enter state 19
	oi             shift, and enter state 20
	cheers         shift, and enter state 21
	mate           shift, and enter state 22
	bloke          shift, and enter state 23
	'#'            shift, and enter state 24
	display        shift, and enter state 25
	whilst         shift, and enter state 26
	'|'            shift, and enter state 27

	Expr           goto state 73

State 54

	Expr -> Expr '^' . Expr                             (rule 22)

	int            shift, and enter state 3
	real           shift, and enter state 4
	fee            shift, and enter state 5
	pie            shift, and enter state 6
	phi            shift, and enter state 7
	mole           shift, and enter state 8
	'-'            shift, and enter state 9
	'/'            shift, and enter state 10
	'('            shift, and enter state 11
	'['            shift, and enter state 12
	sqrt           shift, and enter state 13
	ifz            shift, and enter state 14
	ace            shift, and enter state 15
	rank           shift, and enter state 16
	var            shift, and enter state 17
	string         shift, and enter state 18
	supposing      shift, and enter state 19
	oi             shift, and enter state 20
	cheers         shift, and enter state 21
	mate           shift, and enter state 22
	bloke          shift, and enter state 23
	'#'            shift, and enter state 24
	display        shift, and enter state 25
	whilst         shift, and enter state 26
	'|'            shift, and enter state 27

	Expr           goto state 72

State 55

	Expr -> Expr '>' . Expr                             (rule 25)

	int            shift, and enter state 3
	real           shift, and enter state 4
	fee            shift, and enter state 5
	pie            shift, and enter state 6
	phi            shift, and enter state 7
	mole           shift, and enter state 8
	'-'            shift, and enter state 9
	'/'            shift, and enter state 10
	'('            shift, and enter state 11
	'['            shift, and enter state 12
	sqrt           shift, and enter state 13
	ifz            shift, and enter state 14
	ace            shift, and enter state 15
	rank           shift, and enter state 16
	var            shift, and enter state 17
	string         shift, and enter state 18
	supposing      shift, and enter state 19
	oi             shift, and enter state 20
	cheers         shift, and enter state 21
	mate           shift, and enter state 22
	bloke          shift, and enter state 23
	'#'            shift, and enter state 24
	display        shift, and enter state 25
	whilst         shift, and enter state 26
	'|'            shift, and enter state 27

	Expr           goto state 71

State 56

	Expr -> Expr '<' . Expr                             (rule 26)

	int            shift, and enter state 3
	real           shift, and enter state 4
	fee            shift, and enter state 5
	pie            shift, and enter state 6
	phi            shift, and enter state 7
	mole           shift, and enter state 8
	'-'            shift, and enter state 9
	'/'            shift, and enter state 10
	'('            shift, and enter state 11
	'['            shift, and enter state 12
	sqrt           shift, and enter state 13
	ifz            shift, and enter state 14
	ace            shift, and enter state 15
	rank           shift, and enter state 16
	var            shift, and enter state 17
	string         shift, and enter state 18
	supposing      shift, and enter state 19
	oi             shift, and enter state 20
	cheers         shift, and enter state 21
	mate           shift, and enter state 22
	bloke          shift, and enter state 23
	'#'            shift, and enter state 24
	display        shift, and enter state 25
	whilst         shift, and enter state 26
	'|'            shift, and enter state 27

	Expr           goto state 70

State 57

	Expr -> Expr leq . Expr                             (rule 29)

	int            shift, and enter state 3
	real           shift, and enter state 4
	fee            shift, and enter state 5
	pie            shift, and enter state 6
	phi            shift, and enter state 7
	mole           shift, and enter state 8
	'-'            shift, and enter state 9
	'/'            shift, and enter state 10
	'('            shift, and enter state 11
	'['            shift, and enter state 12
	sqrt           shift, and enter state 13
	ifz            shift, and enter state 14
	ace            shift, and enter state 15
	rank           shift, and enter state 16
	var            shift, and enter state 17
	string         shift, and enter state 18
	supposing      shift, and enter state 19
	oi             shift, and enter state 20
	cheers         shift, and enter state 21
	mate           shift, and enter state 22
	bloke          shift, and enter state 23
	'#'            shift, and enter state 24
	display        shift, and enter state 25
	whilst         shift, and enter state 26
	'|'            shift, and enter state 27

	Expr           goto state 69

State 58

	Expr -> Expr geq . Expr                             (rule 30)

	int            shift, and enter state 3
	real           shift, and enter state 4
	fee            shift, and enter state 5
	pie            shift, and enter state 6
	phi            shift, and enter state 7
	mole           shift, and enter state 8
	'-'            shift, and enter state 9
	'/'            shift, and enter state 10
	'('            shift, and enter state 11
	'['            shift, and enter state 12
	sqrt           shift, and enter state 13
	ifz            shift, and enter state 14
	ace            shift, and enter state 15
	rank           shift, and enter state 16
	var            shift, and enter state 17
	string         shift, and enter state 18
	supposing      shift, and enter state 19
	oi             shift, and enter state 20
	cheers         shift, and enter state 21
	mate           shift, and enter state 22
	bloke          shift, and enter state 23
	'#'            shift, and enter state 24
	display        shift, and enter state 25
	whilst         shift, and enter state 26
	'|'            shift, and enter state 27

	Expr           goto state 68

State 59

	Expr -> Expr '/\\' . Expr                           (rule 27)

	int            shift, and enter state 3
	real           shift, and enter state 4
	fee            shift, and enter state 5
	pie            shift, and enter state 6
	phi            shift, and enter state 7
	mole           shift, and enter state 8
	'-'            shift, and enter state 9
	'/'            shift, and enter state 10
	'('            shift, and enter state 11
	'['            shift, and enter state 12
	sqrt           shift, and enter state 13
	ifz            shift, and enter state 14
	ace            shift, and enter state 15
	rank           shift, and enter state 16
	var            shift, and enter state 17
	string         shift, and enter state 18
	supposing      shift, and enter state 19
	oi             shift, and enter state 20
	cheers         shift, and enter state 21
	mate           shift, and enter state 22
	bloke          shift, and enter state 23
	'#'            shift, and enter state 24
	display        shift, and enter state 25
	whilst         shift, and enter state 26
	'|'            shift, and enter state 27

	Expr           goto state 67

State 60

	Expr -> Expr '\\/' . Expr                           (rule 28)

	int            shift, and enter state 3
	real           shift, and enter state 4
	fee            shift, and enter state 5
	pie            shift, and enter state 6
	phi            shift, and enter state 7
	mole           shift, and enter state 8
	'-'            shift, and enter state 9
	'/'            shift, and enter state 10
	'('            shift, and enter state 11
	'['            shift, and enter state 12
	sqrt           shift, and enter state 13
	ifz            shift, and enter state 14
	ace            shift, and enter state 15
	rank           shift, and enter state 16
	var            shift, and enter state 17
	string         shift, and enter state 18
	supposing      shift, and enter state 19
	oi             shift, and enter state 20
	cheers         shift, and enter state 21
	mate           shift, and enter state 22
	bloke          shift, and enter state 23
	'#'            shift, and enter state 24
	display        shift, and enter state 25
	whilst         shift, and enter state 26
	'|'            shift, and enter state 27

	Expr           goto state 66

State 61

	Dec -> Expr innit .                                 (rule 1)

	%eof           reduce using rule 1


State 62

	Expr -> Expr '==' . Expr                            (rule 42)

	int            shift, and enter state 3
	real           shift, and enter state 4
	fee            shift, and enter state 5
	pie            shift, and enter state 6
	phi            shift, and enter state 7
	mole           shift, and enter state 8
	'-'            shift, and enter state 9
	'/'            shift, and enter state 10
	'('            shift, and enter state 11
	'['            shift, and enter state 12
	sqrt           shift, and enter state 13
	ifz            shift, and enter state 14
	ace            shift, and enter state 15
	rank           shift, and enter state 16
	var            shift, and enter state 17
	string         shift, and enter state 18
	supposing      shift, and enter state 19
	oi             shift, and enter state 20
	cheers         shift, and enter state 21
	mate           shift, and enter state 22
	bloke          shift, and enter state 23
	'#'            shift, and enter state 24
	display        shift, and enter state 25
	whilst         shift, and enter state 26
	'|'            shift, and enter state 27

	Expr           goto state 65

State 63

	Expr -> Expr '~' . Expr                             (rule 44)

	int            shift, and enter state 3
	real           shift, and enter state 4
	fee            shift, and enter state 5
	pie            shift, and enter state 6
	phi            shift, and enter state 7
	mole           shift, and enter state 8
	'-'            shift, and enter state 9
	'/'            shift, and enter state 10
	'('            shift, and enter state 11
	'['            shift, and enter state 12
	sqrt           shift, and enter state 13
	ifz            shift, and enter state 14
	ace            shift, and enter state 15
	rank           shift, and enter state 16
	var            shift, and enter state 17
	string         shift, and enter state 18
	supposing      shift, and enter state 19
	oi             shift, and enter state 20
	cheers         shift, and enter state 21
	mate           shift, and enter state 22
	bloke          shift, and enter state 23
	'#'            shift, and enter state 24
	display        shift, and enter state 25
	whilst         shift, and enter state 26
	'|'            shift, and enter state 27

	Expr           goto state 64

State 64

	Expr -> Expr . '+' Expr                             (rule 18)
	Expr -> Expr . '-' Expr                             (rule 19)
	Expr -> Expr . '*' Expr                             (rule 20)
	Expr -> Expr . '/' Expr                             (rule 21)
	Expr -> Expr . '^' Expr                             (rule 22)
	Expr -> Expr . '%' Expr                             (rule 23)
	Expr -> Expr . '=' Expr                             (rule 24)
	Expr -> Expr . '>' Expr                             (rule 25)
	Expr -> Expr . '<' Expr                             (rule 26)
	Expr -> Expr . '/\\' Expr                           (rule 27)
	Expr -> Expr . '\\/' Expr                           (rule 28)
	Expr -> Expr . leq Expr                             (rule 29)
	Expr -> Expr . geq Expr                             (rule 30)
	Expr -> Expr . '(' Expr ')'                         (rule 39)
	Expr -> Expr . '==' Expr                            (rule 42)
	Expr -> Expr . '~' Expr                             (rule 44)
	Expr -> Expr '~' Expr .                             (rule 44)

	'+'            shift, and enter state 47
	'-'            shift, and enter state 48
	'*'            shift, and enter state 49
	'/'            shift, and enter state 50
	'('            shift, and enter state 51
	')'            reduce using rule 44
	']'            reduce using rule 44
	'%'            shift, and enter state 52
	'='            reduce using rule 44
	'^'            shift, and enter state 54
	'>'            reduce using rule 44
	'<'            reduce using rule 44
	leq            reduce using rule 44
	geq            reduce using rule 44
	for            reduce using rule 44
	hence          reduce using rule 44
	otherwise      reduce using rule 44
	'/\\'          reduce using rule 44
	'\\/'          reduce using rule 44
	innit          reduce using rule 44
	','            reduce using rule 44
	'\\'           reduce using rule 44
	'=='           shift, and enter state 62
	doeth          reduce using rule 44
	'|'            reduce using rule 44
	'~'            reduce using rule 44


State 65

	Expr -> Expr . '+' Expr                             (rule 18)
	Expr -> Expr . '-' Expr                             (rule 19)
	Expr -> Expr . '*' Expr                             (rule 20)
	Expr -> Expr . '/' Expr                             (rule 21)
	Expr -> Expr . '^' Expr                             (rule 22)
	Expr -> Expr . '%' Expr                             (rule 23)
	Expr -> Expr . '=' Expr                             (rule 24)
	Expr -> Expr . '>' Expr                             (rule 25)
	Expr -> Expr . '<' Expr                             (rule 26)
	Expr -> Expr . '/\\' Expr                           (rule 27)
	Expr -> Expr . '\\/' Expr                           (rule 28)
	Expr -> Expr . leq Expr                             (rule 29)
	Expr -> Expr . geq Expr                             (rule 30)
	Expr -> Expr . '(' Expr ')'                         (rule 39)
	Expr -> Expr . '==' Expr                            (rule 42)
	Expr -> Expr '==' Expr .                            (rule 42)
	Expr -> Expr . '~' Expr                             (rule 44)

	'+'            shift, and enter state 47
	'-'            shift, and enter state 48
	'*'            shift, and enter state 49
	'/'            shift, and enter state 50
	'('            shift, and enter state 51
	')'            reduce using rule 42
	']'            reduce using rule 42
	'%'            shift, and enter state 52
	'='            reduce using rule 42
	'^'            shift, and enter state 54
	'>'            reduce using rule 42
	'<'            reduce using rule 42
	leq            reduce using rule 42
	geq            reduce using rule 42
	for            reduce using rule 42
	hence          reduce using rule 42
	otherwise      reduce using rule 42
	'/\\'          reduce using rule 42
	'\\/'          reduce using rule 42
	innit          reduce using rule 42
	','            reduce using rule 42
	'\\'           reduce using rule 42
	'=='           reduce using rule 42
	doeth          reduce using rule 42
	'|'            reduce using rule 42
	'~'            reduce using rule 42


State 66

	Expr -> Expr . '+' Expr                             (rule 18)
	Expr -> Expr . '-' Expr                             (rule 19)
	Expr -> Expr . '*' Expr                             (rule 20)
	Expr -> Expr . '/' Expr                             (rule 21)
	Expr -> Expr . '^' Expr                             (rule 22)
	Expr -> Expr . '%' Expr                             (rule 23)
	Expr -> Expr . '=' Expr                             (rule 24)
	Expr -> Expr . '>' Expr                             (rule 25)
	Expr -> Expr . '<' Expr                             (rule 26)
	Expr -> Expr . '/\\' Expr                           (rule 27)
	Expr -> Expr . '\\/' Expr                           (rule 28)
	Expr -> Expr '\\/' Expr .                           (rule 28)
	Expr -> Expr . leq Expr                             (rule 29)
	Expr -> Expr . geq Expr                             (rule 30)
	Expr -> Expr . '(' Expr ')'                         (rule 39)
	Expr -> Expr . '==' Expr                            (rule 42)
	Expr -> Expr . '~' Expr                             (rule 44)

	'+'            shift, and enter state 47
	'-'            shift, and enter state 48
	'*'            shift, and enter state 49
	'/'            shift, and enter state 50
	'('            shift, and enter state 51
	')'            reduce using rule 28
	']'            reduce using rule 28
	'%'            shift, and enter state 52
	'='            shift, and enter state 53
	'^'            shift, and enter state 54
	'>'            shift, and enter state 55
	'<'            shift, and enter state 56
	leq            shift, and enter state 57
	geq            shift, and enter state 58
	for            reduce using rule 28
	hence          reduce using rule 28
	otherwise      reduce using rule 28
	'/\\'          shift, and enter state 59
	'\\/'          shift, and enter state 60
	innit          reduce using rule 28
	','            reduce using rule 28
	'\\'           reduce using rule 28
	'=='           shift, and enter state 62
	doeth          reduce using rule 28
	'|'            reduce using rule 28
	'~'            shift, and enter state 63


State 67

	Expr -> Expr . '+' Expr                             (rule 18)
	Expr -> Expr . '-' Expr                             (rule 19)
	Expr -> Expr . '*' Expr                             (rule 20)
	Expr -> Expr . '/' Expr                             (rule 21)
	Expr -> Expr . '^' Expr                             (rule 22)
	Expr -> Expr . '%' Expr                             (rule 23)
	Expr -> Expr . '=' Expr                             (rule 24)
	Expr -> Expr . '>' Expr                             (rule 25)
	Expr -> Expr . '<' Expr                             (rule 26)
	Expr -> Expr . '/\\' Expr                           (rule 27)
	Expr -> Expr '/\\' Expr .                           (rule 27)
	Expr -> Expr . '\\/' Expr                           (rule 28)
	Expr -> Expr . leq Expr                             (rule 29)
	Expr -> Expr . geq Expr                             (rule 30)
	Expr -> Expr . '(' Expr ')'                         (rule 39)
	Expr -> Expr . '==' Expr                            (rule 42)
	Expr -> Expr . '~' Expr                             (rule 44)

	'+'            shift, and enter state 47
	'-'            shift, and enter state 48
	'*'            shift, and enter state 49
	'/'            shift, and enter state 50
	'('            shift, and enter state 51
	')'            reduce using rule 27
	']'            reduce using rule 27
	'%'            shift, and enter state 52
	'='            shift, and enter state 53
	'^'            shift, and enter state 54
	'>'            shift, and enter state 55
	'<'            shift, and enter state 56
	leq            shift, and enter state 57
	geq            shift, and enter state 58
	for            reduce using rule 27
	hence          reduce using rule 27
	otherwise      reduce using rule 27
	'/\\'          shift, and enter state 59
	'\\/'          reduce using rule 27
	innit          reduce using rule 27
	','            reduce using rule 27
	'\\'           reduce using rule 27
	'=='           shift, and enter state 62
	doeth          reduce using rule 27
	'|'            reduce using rule 27
	'~'            shift, and enter state 63


State 68

	Expr -> Expr . '+' Expr                             (rule 18)
	Expr -> Expr . '-' Expr                             (rule 19)
	Expr -> Expr . '*' Expr                             (rule 20)
	Expr -> Expr . '/' Expr                             (rule 21)
	Expr -> Expr . '^' Expr                             (rule 22)
	Expr -> Expr . '%' Expr                             (rule 23)
	Expr -> Expr . '=' Expr                             (rule 24)
	Expr -> Expr . '>' Expr                             (rule 25)
	Expr -> Expr . '<' Expr                             (rule 26)
	Expr -> Expr . '/\\' Expr                           (rule 27)
	Expr -> Expr . '\\/' Expr                           (rule 28)
	Expr -> Expr . leq Expr                             (rule 29)
	Expr -> Expr . geq Expr                             (rule 30)
	Expr -> Expr geq Expr .                             (rule 30)
	Expr -> Expr . '(' Expr ')'                         (rule 39)
	Expr -> Expr . '==' Expr                            (rule 42)
	Expr -> Expr . '~' Expr                             (rule 44)

	'+'            shift, and enter state 47
	'-'            shift, and enter state 48
	'*'            shift, and enter state 49
	'/'            shift, and enter state 50
	'('            shift, and enter state 51
	')'            reduce using rule 30
	']'            reduce using rule 30
	'%'            shift, and enter state 52
	'='            fail
	'^'            shift, and enter state 54
	'>'            fail
	'<'            fail
	leq            fail
	geq            fail
	for            reduce using rule 30
	hence          reduce using rule 30
	otherwise      reduce using rule 30
	'/\\'          reduce using rule 30
	'\\/'          reduce using rule 30
	innit          reduce using rule 30
	','            reduce using rule 30
	'\\'           reduce using rule 30
	'=='           shift, and enter state 62
	doeth          reduce using rule 30
	'|'            reduce using rule 30
	'~'            shift, and enter state 63


State 69

	Expr -> Expr . '+' Expr                             (rule 18)
	Expr -> Expr . '-' Expr                             (rule 19)
	Expr -> Expr . '*' Expr                             (rule 20)
	Expr -> Expr . '/' Expr                             (rule 21)
	Expr -> Expr . '^' Expr                             (rule 22)
	Expr -> Expr . '%' Expr                             (rule 23)
	Expr -> Expr . '=' Expr                             (rule 24)
	Expr -> Expr . '>' Expr                             (rule 25)
	Expr -> Expr . '<' Expr                             (rule 26)
	Expr -> Expr . '/\\' Expr                           (rule 27)
	Expr -> Expr . '\\/' Expr                           (rule 28)
	Expr -> Expr . leq Expr                             (rule 29)
	Expr -> Expr leq Expr .                             (rule 29)
	Expr -> Expr . geq Expr                             (rule 30)
	Expr -> Expr . '(' Expr ')'                         (rule 39)
	Expr -> Expr . '==' Expr                            (rule 42)
	Expr -> Expr . '~' Expr                             (rule 44)

	'+'            shift, and enter state 47
	'-'            shift, and enter state 48
	'*'            shift, and enter state 49
	'/'            shift, and enter state 50
	'('            shift, and enter state 51
	')'            reduce using rule 29
	']'            reduce using rule 29
	'%'            shift, and enter state 52
	'='            fail
	'^'            shift, and enter state 54
	'>'            fail
	'<'            fail
	leq            fail
	geq            fail
	for            reduce using rule 29
	hence          reduce using rule 29
	otherwise      reduce using rule 29
	'/\\'          reduce using rule 29
	'\\/'          reduce using rule 29
	innit          reduce using rule 29
	','            reduce using rule 29
	'\\'           reduce using rule 29
	'=='           shift, and enter state 62
	doeth          reduce using rule 29
	'|'            reduce using rule 29
	'~'            shift, and enter state 63


State 70

	Expr -> Expr . '+' Expr                             (rule 18)
	Expr -> Expr . '-' Expr                             (rule 19)
	Expr -> Expr . '*' Expr                             (rule 20)
	Expr -> Expr . '/' Expr                             (rule 21)
	Expr -> Expr . '^' Expr                             (rule 22)
	Expr -> Expr . '%' Expr                             (rule 23)
	Expr -> Expr . '=' Expr                             (rule 24)
	Expr -> Expr . '>' Expr                             (rule 25)
	Expr -> Expr . '<' Expr                             (rule 26)
	Expr -> Expr '<' Expr .                             (rule 26)
	Expr -> Expr . '/\\' Expr                           (rule 27)
	Expr -> Expr . '\\/' Expr                           (rule 28)
	Expr -> Expr . leq Expr                             (rule 29)
	Expr -> Expr . geq Expr                             (rule 30)
	Expr -> Expr . '(' Expr ')'                         (rule 39)
	Expr -> Expr . '==' Expr                            (rule 42)
	Expr -> Expr . '~' Expr                             (rule 44)

	'+'            shift, and enter state 47
	'-'            shift, and enter state 48
	'*'            shift, and enter state 49
	'/'            shift, and enter state 50
	'('            shift, and enter state 51
	')'            reduce using rule 26
	']'            reduce using rule 26
	'%'            shift, and enter state 52
	'='            fail
	'^'            shift, and enter state 54
	'>'            fail
	'<'            fail
	leq            fail
	geq            fail
	for            reduce using rule 26
	hence          reduce using rule 26
	otherwise      reduce using rule 26
	'/\\'          reduce using rule 26
	'\\/'          reduce using rule 26
	innit          reduce using rule 26
	','            reduce using rule 26
	'\\'           reduce using rule 26
	'=='           shift, and enter state 62
	doeth          reduce using rule 26
	'|'            reduce using rule 26
	'~'            shift, and enter state 63


State 71

	Expr -> Expr . '+' Expr                             (rule 18)
	Expr -> Expr . '-' Expr                             (rule 19)
	Expr -> Expr . '*' Expr                             (rule 20)
	Expr -> Expr . '/' Expr                             (rule 21)
	Expr -> Expr . '^' Expr                             (rule 22)
	Expr -> Expr . '%' Expr                             (rule 23)
	Expr -> Expr . '=' Expr                             (rule 24)
	Expr -> Expr . '>' Expr                             (rule 25)
	Expr -> Expr '>' Expr .                             (rule 25)
	Expr -> Expr . '<' Expr                             (rule 26)
	Expr -> Expr . '/\\' Expr                           (rule 27)
	Expr -> Expr . '\\/' Expr                           (rule 28)
	Expr -> Expr . leq Expr                             (rule 29)
	Expr -> Expr . geq Expr                             (rule 30)
	Expr -> Expr . '(' Expr ')'                         (rule 39)
	Expr -> Expr . '==' Expr                            (rule 42)
	Expr -> Expr . '~' Expr                             (rule 44)

	'+'            shift, and enter state 47
	'-'            shift, and enter state 48
	'*'            shift, and enter state 49
	'/'            shift, and enter state 50
	'('            shift, and enter state 51
	')'            reduce using rule 25
	']'            reduce using rule 25
	'%'            shift, and enter state 52
	'='            fail
	'^'            shift, and enter state 54
	'>'            fail
	'<'            fail
	leq            fail
	geq            fail
	for            reduce using rule 25
	hence          reduce using rule 25
	otherwise      reduce using rule 25
	'/\\'          reduce using rule 25
	'\\/'          reduce using rule 25
	innit          reduce using rule 25
	','            reduce using rule 25
	'\\'           reduce using rule 25
	'=='           shift, and enter state 62
	doeth          reduce using rule 25
	'|'            reduce using rule 25
	'~'            shift, and enter state 63


State 72

	Expr -> Expr . '+' Expr                             (rule 18)
	Expr -> Expr . '-' Expr                             (rule 19)
	Expr -> Expr . '*' Expr                             (rule 20)
	Expr -> Expr . '/' Expr                             (rule 21)
	Expr -> Expr . '^' Expr                             (rule 22)
	Expr -> Expr '^' Expr .                             (rule 22)
	Expr -> Expr . '%' Expr                             (rule 23)
	Expr -> Expr . '=' Expr                             (rule 24)
	Expr -> Expr . '>' Expr                             (rule 25)
	Expr -> Expr . '<' Expr                             (rule 26)
	Expr -> Expr . '/\\' Expr                           (rule 27)
	Expr -> Expr . '\\/' Expr                           (rule 28)
	Expr -> Expr . leq Expr                             (rule 29)
	Expr -> Expr . geq Expr                             (rule 30)
	Expr -> Expr . '(' Expr ')'                         (rule 39)
	Expr -> Expr . '==' Expr                            (rule 42)
	Expr -> Expr . '~' Expr                             (rule 44)

	'+'            reduce using rule 22
	'-'            reduce using rule 22
	'*'            reduce using rule 22
	'/'            reduce using rule 22
	'('            shift, and enter state 51
	')'            reduce using rule 22
	']'            reduce using rule 22
	'%'            reduce using rule 22
	'='            reduce using rule 22
	'^'            shift, and enter state 54
	'>'            reduce using rule 22
	'<'            reduce using rule 22
	leq            reduce using rule 22
	geq            reduce using rule 22
	for            reduce using rule 22
	hence          reduce using rule 22
	otherwise      reduce using rule 22
	'/\\'          reduce using rule 22
	'\\/'          reduce using rule 22
	innit          reduce using rule 22
	','            reduce using rule 22
	'\\'           reduce using rule 22
	'=='           reduce using rule 22
	doeth          reduce using rule 22
	'|'            reduce using rule 22
	'~'            reduce using rule 22


State 73

	Expr -> Expr . '+' Expr                             (rule 18)
	Expr -> Expr . '-' Expr                             (rule 19)
	Expr -> Expr . '*' Expr                             (rule 20)
	Expr -> Expr . '/' Expr                             (rule 21)
	Expr -> Expr . '^' Expr                             (rule 22)
	Expr -> Expr . '%' Expr                             (rule 23)
	Expr -> Expr . '=' Expr                             (rule 24)
	Expr -> Expr '=' Expr .                             (rule 24)
	Expr -> Expr . '>' Expr                             (rule 25)
	Expr -> Expr . '<' Expr                             (rule 26)
	Expr -> Expr . '/\\' Expr                           (rule 27)
	Expr -> Expr . '\\/' Expr                           (rule 28)
	Expr -> Expr . leq Expr                             (rule 29)
	Expr -> Expr . geq Expr                             (rule 30)
	Expr -> Expr . '(' Expr ')'                         (rule 39)
	Expr -> Expr . '==' Expr                            (rule 42)
	Expr -> Expr . '~' Expr                             (rule 44)

	'+'            shift, and enter state 47
	'-'            shift, and enter state 48
	'*'            shift, and enter state 49
	'/'            shift, and enter state 50
	'('            shift, and enter state 51
	')'            reduce using rule 24
	']'            reduce using rule 24
	'%'            shift, and enter state 52
	'='            fail
	'^'            shift, and enter state 54
	'>'            fail
	'<'            fail
	leq            fail
	geq            fail
	for            reduce using rule 24
	hence          reduce using rule 24
	otherwise      reduce using rule 24
	'/\\'          reduce using rule 24
	'\\/'          reduce using rule 24
	innit          reduce using rule 24
	','            reduce using rule 24
	'\\'           reduce using rule 24
	'=='           shift, and enter state 62
	doeth          reduce using rule 24
	'|'            reduce using rule 24
	'~'            shift, and enter state 63


State 74

	Expr -> Expr . '+' Expr                             (rule 18)
	Expr -> Expr . '-' Expr                             (rule 19)
	Expr -> Expr . '*' Expr                             (rule 20)
	Expr -> Expr . '/' Expr                             (rule 21)
	Expr -> Expr . '^' Expr                             (rule 22)
	Expr -> Expr . '%' Expr                             (rule 23)
	Expr -> Expr '%' Expr .                             (rule 23)
	Expr -> Expr . '=' Expr                             (rule 24)
	Expr -> Expr . '>' Expr                             (rule 25)
	Expr -> Expr . '<' Expr                             (rule 26)
	Expr -> Expr . '/\\' Expr                           (rule 27)
	Expr -> Expr . '\\/' Expr                           (rule 28)
	Expr -> Expr . leq Expr                             (rule 29)
	Expr -> Expr . geq Expr                             (rule 30)
	Expr -> Expr . '(' Expr ')'                         (rule 39)
	Expr -> Expr . '==' Expr                            (rule 42)
	Expr -> Expr . '~' Expr                             (rule 44)

	'+'            reduce using rule 23
	'-'            reduce using rule 23
	'*'            reduce using rule 23
	'/'            reduce using rule 23
	'('            shift, and enter state 51
	')'            reduce using rule 23
	']'            reduce using rule 23
	'%'            reduce using rule 23
	'='            reduce using rule 23
	'^'            shift, and enter state 54
	'>'            reduce using rule 23
	'<'            reduce using rule 23
	leq            reduce using rule 23
	geq            reduce using rule 23
	for            reduce using rule 23
	hence          reduce using rule 23
	otherwise      reduce using rule 23
	'/\\'          reduce using rule 23
	'\\/'          reduce using rule 23
	innit          reduce using rule 23
	','            reduce using rule 23
	'\\'           reduce using rule 23
	'=='           reduce using rule 23
	doeth          reduce using rule 23
	'|'            reduce using rule 23
	'~'            reduce using rule 23


State 75

	Expr -> Expr . '+' Expr                             (rule 18)
	Expr -> Expr . '-' Expr                             (rule 19)
	Expr -> Expr . '*' Expr                             (rule 20)
	Expr -> Expr . '/' Expr                             (rule 21)
	Expr -> Expr . '^' Expr                             (rule 22)
	Expr -> Expr . '%' Expr                             (rule 23)
	Expr -> Expr . '=' Expr                             (rule 24)
	Expr -> Expr . '>' Expr                             (rule 25)
	Expr -> Expr . '<' Expr                             (rule 26)
	Expr -> Expr . '/\\' Expr                           (rule 27)
	Expr -> Expr . '\\/' Expr                           (rule 28)
	Expr -> Expr . leq Expr                             (rule 29)
	Expr -> Expr . geq Expr                             (rule 30)
	Expr -> Expr . '(' Expr ')'                         (rule 39)
	Expr -> Expr '(' Expr . ')'                         (rule 39)
	Expr -> Expr . '==' Expr                            (rule 42)
	Expr -> Expr . '~' Expr                             (rule 44)

	'+'            shift, and enter state 47
	'-'            shift, and enter state 48
	'*'            shift, and enter state 49
	'/'            shift, and enter state 50
	'('            shift, and enter state 51
	')'            shift, and enter state 103
	'%'            shift, and enter state 52
	'='            shift, and enter state 53
	'^'            shift, and enter state 54
	'>'            shift, and enter state 55
	'<'            shift, and enter state 56
	leq            shift, and enter state 57
	geq            shift, and enter state 58
	'/\\'          shift, and enter state 59
	'\\/'          shift, and enter state 60
	'=='           shift, and enter state 62
	'~'            shift, and enter state 63


State 76

	Expr -> Expr . '+' Expr                             (rule 18)
	Expr -> Expr . '-' Expr                             (rule 19)
	Expr -> Expr . '*' Expr                             (rule 20)
	Expr -> Expr . '/' Expr                             (rule 21)
	Expr -> Expr '/' Expr .                             (rule 21)
	Expr -> Expr . '^' Expr                             (rule 22)
	Expr -> Expr . '%' Expr                             (rule 23)
	Expr -> Expr . '=' Expr                             (rule 24)
	Expr -> Expr . '>' Expr                             (rule 25)
	Expr -> Expr . '<' Expr                             (rule 26)
	Expr -> Expr . '/\\' Expr                           (rule 27)
	Expr -> Expr . '\\/' Expr                           (rule 28)
	Expr -> Expr . leq Expr                             (rule 29)
	Expr -> Expr . geq Expr                             (rule 30)
	Expr -> Expr . '(' Expr ')'                         (rule 39)
	Expr -> Expr . '==' Expr                            (rule 42)
	Expr -> Expr . '~' Expr                             (rule 44)

	'+'            reduce using rule 21
	'-'            reduce using rule 21
	'*'            reduce using rule 21
	'/'            reduce using rule 21
	'('            shift, and enter state 51
	')'            reduce using rule 21
	']'            reduce using rule 21
	'%'            shift, and enter state 52
	'='            reduce using rule 21
	'^'            shift, and enter state 54
	'>'            reduce using rule 21
	'<'            reduce using rule 21
	leq            reduce using rule 21
	geq            reduce using rule 21
	for            reduce using rule 21
	hence          reduce using rule 21
	otherwise      reduce using rule 21
	'/\\'          reduce using rule 21
	'\\/'          reduce using rule 21
	innit          reduce using rule 21
	','            reduce using rule 21
	'\\'           reduce using rule 21
	'=='           reduce using rule 21
	doeth          reduce using rule 21
	'|'            reduce using rule 21
	'~'            reduce using rule 21


State 77

	Expr -> Expr . '+' Expr                             (rule 18)
	Expr -> Expr . '-' Expr                             (rule 19)
	Expr -> Expr . '*' Expr                             (rule 20)
	Expr -> Expr '*' Expr .                             (rule 20)
	Expr -> Expr . '/' Expr                             (rule 21)
	Expr -> Expr . '^' Expr                             (rule 22)
	Expr -> Expr . '%' Expr                             (rule 23)
	Expr -> Expr . '=' Expr                             (rule 24)
	Expr -> Expr . '>' Expr                             (rule 25)
	Expr -> Expr . '<' Expr                             (rule 26)
	Expr -> Expr . '/\\' Expr                           (rule 27)
	Expr -> Expr . '\\/' Expr                           (rule 28)
	Expr -> Expr . leq Expr                             (rule 29)
	Expr -> Expr . geq Expr                             (rule 30)
	Expr -> Expr . '(' Expr ')'                         (rule 39)
	Expr -> Expr . '==' Expr                            (rule 42)
	Expr -> Expr . '~' Expr                             (rule 44)

	'+'            reduce using rule 20
	'-'            reduce using rule 20
	'*'            reduce using rule 20
	'/'            reduce using rule 20
	'('            shift, and enter state 51
	')'            reduce using rule 20
	']'            reduce using rule 20
	'%'            shift, and enter state 52
	'='            reduce using rule 20
	'^'            shift, and enter state 54
	'>'            reduce using rule 20
	'<'            reduce using rule 20
	leq            reduce using rule 20
	geq            reduce using rule 20
	for            reduce using rule 20
	hence          reduce using rule 20
	otherwise      reduce using rule 20
	'/\\'          reduce using rule 20
	'\\/'          reduce using rule 20
	innit          reduce using rule 20
	','            reduce using rule 20
	'\\'           reduce using rule 20
	'=='           reduce using rule 20
	doeth          reduce using rule 20
	'|'            reduce using rule 20
	'~'            reduce using rule 20


State 78

	Expr -> Expr . '+' Expr                             (rule 18)
	Expr -> Expr . '-' Expr                             (rule 19)
	Expr -> Expr '-' Expr .                             (rule 19)
	Expr -> Expr . '*' Expr                             (rule 20)
	Expr -> Expr . '/' Expr                             (rule 21)
	Expr -> Expr . '^' Expr                             (rule 22)
	Expr -> Expr . '%' Expr                             (rule 23)
	Expr -> Expr . '=' Expr                             (rule 24)
	Expr -> Expr . '>' Expr                             (rule 25)
	Expr -> Expr . '<' Expr                             (rule 26)
	Expr -> Expr . '/\\' Expr                           (rule 27)
	Expr -> Expr . '\\/' Expr                           (rule 28)
	Expr -> Expr . leq Expr                             (rule 29)
	Expr -> Expr . geq Expr                             (rule 30)
	Expr -> Expr . '(' Expr ')'                         (rule 39)
	Expr -> Expr . '==' Expr                            (rule 42)
	Expr -> Expr . '~' Expr                             (rule 44)

	'+'            reduce using rule 19
	'-'            reduce using rule 19
	'*'            shift, and enter state 49
	'/'            shift, and enter state 50
	'('            shift, and enter state 51
	')'            reduce using rule 19
	']'            reduce using rule 19
	'%'            shift, and enter state 52
	'='            reduce using rule 19
	'^'            shift, and enter state 54
	'>'            reduce using rule 19
	'<'            reduce using rule 19
	leq            reduce using rule 19
	geq            reduce using rule 19
	for            reduce using rule 19
	hence          reduce using rule 19
	otherwise      reduce using rule 19
	'/\\'          reduce using rule 19
	'\\/'          reduce using rule 19
	innit          reduce using rule 19
	','            reduce using rule 19
	'\\'           reduce using rule 19
	'=='           reduce using rule 19
	doeth          reduce using rule 19
	'|'            reduce using rule 19
	'~'            reduce using rule 19


State 79

	Expr -> Expr . '+' Expr                             (rule 18)
	Expr -> Expr '+' Expr .                             (rule 18)
	Expr -> Expr . '-' Expr                             (rule 19)
	Expr -> Expr . '*' Expr                             (rule 20)
	Expr -> Expr . '/' Expr                             (rule 21)
	Expr -> Expr . '^' Expr                             (rule 22)
	Expr -> Expr . '%' Expr                             (rule 23)
	Expr -> Expr . '=' Expr                             (rule 24)
	Expr -> Expr . '>' Expr                             (rule 25)
	Expr -> Expr . '<' Expr                             (rule 26)
	Expr -> Expr . '/\\' Expr                           (rule 27)
	Expr -> Expr . '\\/' Expr                           (rule 28)
	Expr -> Expr . leq Expr                             (rule 29)
	Expr -> Expr . geq Expr                             (rule 30)
	Expr -> Expr . '(' Expr ')'                         (rule 39)
	Expr -> Expr . '==' Expr                            (rule 42)
	Expr -> Expr . '~' Expr                             (rule 44)

	'+'            reduce using rule 18
	'-'            reduce using rule 18
	'*'            shift, and enter state 49
	'/'            shift, and enter state 50
	'('            shift, and enter state 51
	')'            reduce using rule 18
	']'            reduce using rule 18
	'%'            shift, and enter state 52
	'='            reduce using rule 18
	'^'            shift, and enter state 54
	'>'            reduce using rule 18
	'<'            reduce using rule 18
	leq            reduce using rule 18
	geq            reduce using rule 18
	for            reduce using rule 18
	hence          reduce using rule 18
	otherwise      reduce using rule 18
	'/\\'          reduce using rule 18
	'\\/'          reduce using rule 18
	innit          reduce using rule 18
	','            reduce using rule 18
	'\\'           reduce using rule 18
	'=='           reduce using rule 18
	doeth          reduce using rule 18
	'|'            reduce using rule 18
	'~'            reduce using rule 18


State 80

	Expr -> '/' Expr ',' . Expr '\\'                    (rule 36)

	int            shift, and enter state 3
	real           shift, and enter state 4
	fee            shift, and enter state 5
	pie            shift, and enter state 6
	phi            shift, and enter state 7
	mole           shift, and enter state 8
	'-'            shift, and enter state 9
	'/'            shift, and enter state 10
	'('            shift, and enter state 11
	'['            shift, and enter state 12
	sqrt           shift, and enter state 13
	ifz            shift, and enter state 14
	ace            shift, and enter state 15
	rank           shift, and enter state 16
	var            shift, and enter state 17
	string         shift, and enter state 18
	supposing      shift, and enter state 19
	oi             shift, and enter state 20
	cheers         shift, and enter state 21
	mate           shift, and enter state 22
	bloke          shift, and enter state 23
	'#'            shift, and enter state 24
	display        shift, and enter state 25
	whilst         shift, and enter state 26
	'|'            shift, and enter state 27

	Expr           goto state 102

State 81

	Expr -> '(' Expr ')' .                              (rule 14)

	'+'            reduce using rule 14
	'-'            reduce using rule 14
	'*'            reduce using rule 14
	'/'            reduce using rule 14
	'('            reduce using rule 14
	')'            reduce using rule 14
	']'            reduce using rule 14
	'%'            reduce using rule 14
	'='            reduce using rule 14
	'^'            reduce using rule 14
	'>'            reduce using rule 14
	'<'            reduce using rule 14
	leq            reduce using rule 14
	geq            reduce using rule 14
	for            reduce using rule 14
	hence          reduce using rule 14
	otherwise      reduce using rule 14
	'/\\'          reduce using rule 14
	'\\/'          reduce using rule 14
	innit          reduce using rule 14
	','            reduce using rule 14
	'\\'           reduce using rule 14
	'=='           reduce using rule 14
	doeth          reduce using rule 14
	'|'            reduce using rule 14
	'~'            reduce using rule 14


State 82

	Expr -> '[' Expr ']' .                              (rule 15)

	'+'            reduce using rule 15
	'-'            reduce using rule 15
	'*'            reduce using rule 15
	'/'            reduce using rule 15
	'('            reduce using rule 15
	')'            reduce using rule 15
	']'            reduce using rule 15
	'%'            reduce using rule 15
	'='            reduce using rule 15
	'^'            reduce using rule 15
	'>'            reduce using rule 15
	'<'            reduce using rule 15
	leq            reduce using rule 15
	geq            reduce using rule 15
	for            reduce using rule 15
	hence          reduce using rule 15
	otherwise      reduce using rule 15
	'/\\'          reduce using rule 15
	'\\/'          reduce using rule 15
	innit          reduce using rule 15
	','            reduce using rule 15
	'\\'           reduce using rule 15
	'=='           reduce using rule 15
	doeth          reduce using rule 15
	'|'            reduce using rule 15
	'~'            reduce using rule 15


State 83

	Expr -> ifz Expr hence . Expr otherwise Expr        (rule 32)

	int            shift, and enter state 3
	real           shift, and enter state 4
	fee            shift, and enter state 5
	pie            shift, and enter state 6
	phi            shift, and enter state 7
	mole           shift, and enter state 8
	'-'            shift, and enter state 9
	'/'            shift, and enter state 10
	'('            shift, and enter state 11
	'['            shift, and enter state 12
	sqrt           shift, and enter state 13
	ifz            shift, and enter state 14
	ace            shift, and enter state 15
	rank           shift, and enter state 16
	var            shift, and enter state 17
	string         shift, and enter state 18
	supposing      shift, and enter state 19
	oi             shift, and enter state 20
	cheers         shift, and enter state 21
	mate           shift, and enter state 22
	bloke          shift, and enter state 23
	'#'            shift, and enter state 24
	display        shift, and enter state 25
	whilst         shift, and enter state 26
	'|'            shift, and enter state 27

	Expr           goto state 101

State 84

	Expr -> supposing Expr hence . Expr otherwise Expr    (rule 31)

	int            shift, and enter state 3
	real           shift, and enter state 4
	fee            shift, and enter state 5
	pie            shift, and enter state 6
	phi            shift, and enter state 7
	mole           shift, and enter state 8
	'-'            shift, and enter state 9
	'/'            shift, and enter state 10
	'('            shift, and enter state 11
	'['            shift, and enter state 12
	sqrt           shift, and enter state 13
	ifz            shift, and enter state 14
	ace            shift, and enter state 15
	rank           shift, and enter state 16
	var            shift, and enter state 17
	string         shift, and enter state 18
	supposing      shift, and enter state 19
	oi             shift, and enter state 20
	cheers         shift, and enter state 21
	mate           shift, and enter state 22
	bloke          shift, and enter state 23
	'#'            shift, and enter state 24
	display        shift, and enter state 25
	whilst         shift, and enter state 26
	'|'            shift, and enter state 27

	Expr           goto state 100

State 85

	Expr -> oi var is . Expr for Expr                   (rule 33)

	int            shift, and enter state 3
	real           shift, and enter state 4
	fee            shift, and enter state 5
	pie            shift, and enter state 6
	phi            shift, and enter state 7
	mole           shift, and enter state 8
	'-'            shift, and enter state 9
	'/'            shift, and enter state 10
	'('            shift, and enter state 11
	'['            shift, and enter state 12
	sqrt           shift, and enter state 13
	ifz            shift, and enter state 14
	ace            shift, and enter state 15
	rank           shift, and enter state 16
	var            shift, and enter state 17
	string         shift, and enter state 18
	supposing      shift, and enter state 19
	oi             shift, and enter state 20
	cheers         shift, and enter state 21
	mate           shift, and enter state 22
	bloke          shift, and enter state 23
	'#'            shift, and enter state 24
	display        shift, and enter state 25
	whilst         shift, and enter state 26
	'|'            shift, and enter state 27

	Expr           goto state 99

State 86

	Expr -> cheers var '=>' . Expr                      (rule 38)

	int            shift, and enter state 3
	real           shift, and enter state 4
	fee            shift, and enter state 5
	pie            shift, and enter state 6
	phi            shift, and enter state 7
	mole           shift, and enter state 8
	'-'            shift, and enter state 9
	'/'            shift, and enter state 10
	'('            shift, and enter state 11
	'['            shift, and enter state 12
	sqrt           shift, and enter state 13
	ifz            shift, and enter state 14
	ace            shift, and enter state 15
	rank           shift, and enter state 16
	var            shift, and enter state 17
	string         shift, and enter state 18
	supposing      shift, and enter state 19
	oi             shift, and enter state 20
	cheers         shift, and enter state 21
	mate           shift, and enter state 22
	bloke          shift, and enter state 23
	'#'            shift, and enter state 24
	display        shift, and enter state 25
	whilst         shift, and enter state 26
	'|'            shift, and enter state 27

	Expr           goto state 98

State 87

	Expr -> Expr . '+' Expr                             (rule 18)
	Expr -> Expr . '-' Expr                             (rule 19)
	Expr -> Expr . '*' Expr                             (rule 20)
	Expr -> Expr . '/' Expr                             (rule 21)
	Expr -> Expr . '^' Expr                             (rule 22)
	Expr -> Expr . '%' Expr                             (rule 23)
	Expr -> Expr . '=' Expr                             (rule 24)
	Expr -> Expr . '>' Expr                             (rule 25)
	Expr -> Expr . '<' Expr                             (rule 26)
	Expr -> Expr . '/\\' Expr                           (rule 27)
	Expr -> Expr . '\\/' Expr                           (rule 28)
	Expr -> Expr . leq Expr                             (rule 29)
	Expr -> Expr . geq Expr                             (rule 30)
	Expr -> mate '(' Expr . ')'                         (rule 34)
	Expr -> Expr . '(' Expr ')'                         (rule 39)
	Expr -> Expr . '==' Expr                            (rule 42)
	Expr -> Expr . '~' Expr                             (rule 44)

	'+'            shift, and enter state 47
	'-'            shift, and enter state 48
	'*'            shift, and enter state 49
	'/'            shift, and enter state 50
	'('            shift, and enter state 51
	')'            shift, and enter state 97
	'%'            shift, and enter state 52
	'='            shift, and enter state 53
	'^'            shift, and enter state 54
	'>'            shift, and enter state 55
	'<'            shift, and enter state 56
	leq            shift, and enter state 57
	geq            shift, and enter state 58
	'/\\'          shift, and enter state 59
	'\\/'          shift, and enter state 60
	'=='           shift, and enter state 62
	'~'            shift, and enter state 63


State 88

	Expr -> Expr . '+' Expr                             (rule 18)
	Expr -> Expr . '-' Expr                             (rule 19)
	Expr -> Expr . '*' Expr                             (rule 20)
	Expr -> Expr . '/' Expr                             (rule 21)
	Expr -> Expr . '^' Expr                             (rule 22)
	Expr -> Expr . '%' Expr                             (rule 23)
	Expr -> Expr . '=' Expr                             (rule 24)
	Expr -> Expr . '>' Expr                             (rule 25)
	Expr -> Expr . '<' Expr                             (rule 26)
	Expr -> Expr . '/\\' Expr                           (rule 27)
	Expr -> Expr . '\\/' Expr                           (rule 28)
	Expr -> Expr . leq Expr                             (rule 29)
	Expr -> Expr . geq Expr                             (rule 30)
	Expr -> bloke '(' Expr . ')'                        (rule 35)
	Expr -> Expr . '(' Expr ')'                         (rule 39)
	Expr -> Expr . '==' Expr                            (rule 42)
	Expr -> Expr . '~' Expr                             (rule 44)

	'+'            shift, and enter state 47
	'-'            shift, and enter state 48
	'*'            shift, and enter state 49
	'/'            shift, and enter state 50
	'('            shift, and enter state 51
	')'            shift, and enter state 96
	'%'            shift, and enter state 52
	'='            shift, and enter state 53
	'^'            shift, and enter state 54
	'>'            shift, and enter state 55
	'<'            shift, and enter state 56
	leq            shift, and enter state 57
	geq            shift, and enter state 58
	'/\\'          shift, and enter state 59
	'\\/'          shift, and enter state 60
	'=='           shift, and enter state 62
	'~'            shift, and enter state 63


State 89

	Expr -> whilst Expr doeth . Expr                    (rule 40)

	int            shift, and enter state 3
	real           shift, and enter state 4
	fee            shift, and enter state 5
	pie            shift, and enter state 6
	phi            shift, and enter state 7
	mole           shift, and enter state 8
	'-'            shift, and enter state 9
	'/'            shift, and enter state 10
	'('            shift, and enter state 11
	'['            shift, and enter state 12
	sqrt           shift, and enter state 13
	ifz            shift, and enter state 14
	ace            shift, and enter state 15
	rank           shift, and enter state 16
	var            shift, and enter state 17
	string         shift, and enter state 18
	supposing      shift, and enter state 19
	oi             shift, and enter state 20
	cheers         shift, and enter state 21
	mate           shift, and enter state 22
	bloke          shift, and enter state 23
	'#'            shift, and enter state 24
	display        shift, and enter state 25
	whilst         shift, and enter state 26
	'|'            shift, and enter state 27

	Expr           goto state 95

State 90

	Expr -> '|' Expr '|' .                              (rule 43)

	'+'            reduce using rule 43
	'-'            reduce using rule 43
	'*'            reduce using rule 43
	'/'            reduce using rule 43
	'('            reduce using rule 43
	')'            reduce using rule 43
	']'            reduce using rule 43
	'%'            reduce using rule 43
	'='            reduce using rule 43
	'^'            reduce using rule 43
	'>'            reduce using rule 43
	'<'            reduce using rule 43
	leq            reduce using rule 43
	geq            reduce using rule 43
	for            reduce using rule 43
	hence          reduce using rule 43
	otherwise      reduce using rule 43
	'/\\'          reduce using rule 43
	'\\/'          reduce using rule 43
	innit          reduce using rule 43
	','            reduce using rule 43
	'\\'           reduce using rule 43
	'=='           reduce using rule 43
	doeth          reduce using rule 43
	'|'            reduce using rule 43
	'~'            reduce using rule 43


State 91

	Dec -> hearye var is . Expr innit                   (rule 2)

	int            shift, and enter state 3
	real           shift, and enter state 4
	fee            shift, and enter state 5
	pie            shift, and enter state 6
	phi            shift, and enter state 7
	mole           shift, and enter state 8
	'-'            shift, and enter state 9
	'/'            shift, and enter state 10
	'('            shift, and enter state 11
	'['            shift, and enter state 12
	sqrt           shift, and enter state 13
	ifz            shift, and enter state 14
	ace            shift, and enter state 15
	rank           shift, and enter state 16
	var            shift, and enter state 17
	string         shift, and enter state 18
	supposing      shift, and enter state 19
	oi             shift, and enter state 20
	cheers         shift, and enter state 21
	mate           shift, and enter state 22
	bloke          shift, and enter state 23
	'#'            shift, and enter state 24
	display        shift, and enter state 25
	whilst         shift, and enter state 26
	'|'            shift, and enter state 27

	Expr           goto state 94

State 92

	Dec -> colonize var is . Expr innit                 (rule 3)

	int            shift, and enter state 3
	real           shift, and enter state 4
	fee            shift, and enter state 5
	pie            shift, and enter state 6
	phi            shift, and enter state 7
	mole           shift, and enter state 8
	'-'            shift, and enter state 9
	'/'            shift, and enter state 10
	'('            shift, and enter state 11
	'['            shift, and enter state 12
	sqrt           shift, and enter state 13
	ifz            shift, and enter state 14
	ace            shift, and enter state 15
	rank           shift, and enter state 16
	var            shift, and enter state 17
	string         shift, and enter state 18
	supposing      shift, and enter state 19
	oi             shift, and enter state 20
	cheers         shift, and enter state 21
	mate           shift, and enter state 22
	bloke          shift, and enter state 23
	'#'            shift, and enter state 24
	display        shift, and enter state 25
	whilst         shift, and enter state 26
	'|'            shift, and enter state 27

	Expr           goto state 93

State 93

	Dec -> colonize var is Expr . innit                 (rule 3)
	Expr -> Expr . '+' Expr                             (rule 18)
	Expr -> Expr . '-' Expr                             (rule 19)
	Expr -> Expr . '*' Expr                             (rule 20)
	Expr -> Expr . '/' Expr                             (rule 21)
	Expr -> Expr . '^' Expr                             (rule 22)
	Expr -> Expr . '%' Expr                             (rule 23)
	Expr -> Expr . '=' Expr                             (rule 24)
	Expr -> Expr . '>' Expr                             (rule 25)
	Expr -> Expr . '<' Expr                             (rule 26)
	Expr -> Expr . '/\\' Expr                           (rule 27)
	Expr -> Expr . '\\/' Expr                           (rule 28)
	Expr -> Expr . leq Expr                             (rule 29)
	Expr -> Expr . geq Expr                             (rule 30)
	Expr -> Expr . '(' Expr ')'                         (rule 39)
	Expr -> Expr . '==' Expr                            (rule 42)
	Expr -> Expr . '~' Expr                             (rule 44)

	'+'            shift, and enter state 47
	'-'            shift, and enter state 48
	'*'            shift, and enter state 49
	'/'            shift, and enter state 50
	'('            shift, and enter state 51
	'%'            shift, and enter state 52
	'='            shift, and enter state 53
	'^'            shift, and enter state 54
	'>'            shift, and enter state 55
	'<'            shift, and enter state 56
	leq            shift, and enter state 57
	geq            shift, and enter state 58
	'/\\'          shift, and enter state 59
	'\\/'          shift, and enter state 60
	innit          shift, and enter state 109
	'=='           shift, and enter state 62
	'~'            shift, and enter state 63


State 94

	Dec -> hearye var is Expr . innit                   (rule 2)
	Expr -> Expr . '+' Expr                             (rule 18)
	Expr -> Expr . '-' Expr                             (rule 19)
	Expr -> Expr . '*' Expr                             (rule 20)
	Expr -> Expr . '/' Expr                             (rule 21)
	Expr -> Expr . '^' Expr                             (rule 22)
	Expr -> Expr . '%' Expr                             (rule 23)
	Expr -> Expr . '=' Expr                             (rule 24)
	Expr -> Expr . '>' Expr                             (rule 25)
	Expr -> Expr . '<' Expr                             (rule 26)
	Expr -> Expr . '/\\' Expr                           (rule 27)
	Expr -> Expr . '\\/' Expr                           (rule 28)
	Expr -> Expr . leq Expr                             (rule 29)
	Expr -> Expr . geq Expr                             (rule 30)
	Expr -> Expr . '(' Expr ')'                         (rule 39)
	Expr -> Expr . '==' Expr                            (rule 42)
	Expr -> Expr . '~' Expr                             (rule 44)

	'+'            shift, and enter state 47
	'-'            shift, and enter state 48
	'*'            shift, and enter state 49
	'/'            shift, and enter state 50
	'('            shift, and enter state 51
	'%'            shift, and enter state 52
	'='            shift, and enter state 53
	'^'            shift, and enter state 54
	'>'            shift, and enter state 55
	'<'            shift, and enter state 56
	leq            shift, and enter state 57
	geq            shift, and enter state 58
	'/\\'          shift, and enter state 59
	'\\/'          shift, and enter state 60
	innit          shift, and enter state 108
	'=='           shift, and enter state 62
	'~'            shift, and enter state 63


State 95

	Expr -> Expr . '+' Expr                             (rule 18)
	Expr -> Expr . '-' Expr                             (rule 19)
	Expr -> Expr . '*' Expr                             (rule 20)
	Expr -> Expr . '/' Expr                             (rule 21)
	Expr -> Expr . '^' Expr                             (rule 22)
	Expr -> Expr . '%' Expr                             (rule 23)
	Expr -> Expr . '=' Expr                             (rule 24)
	Expr -> Expr . '>' Expr                             (rule 25)
	Expr -> Expr . '<' Expr                             (rule 26)
	Expr -> Expr . '/\\' Expr                           (rule 27)
	Expr -> Expr . '\\/' Expr                           (rule 28)
	Expr -> Expr . leq Expr                             (rule 29)
	Expr -> Expr . geq Expr                             (rule 30)
	Expr -> Expr . '(' Expr ')'                         (rule 39)
	Expr -> whilst Expr doeth Expr .                    (rule 40)
	Expr -> Expr . '==' Expr                            (rule 42)
	Expr -> Expr . '~' Expr                             (rule 44)

	'+'            shift, and enter state 47
	'-'            shift, and enter state 48
	'*'            shift, and enter state 49
	'/'            shift, and enter state 50
	'('            shift, and enter state 51
	')'            reduce using rule 40
	']'            reduce using rule 40
	'%'            shift, and enter state 52
	'='            shift, and enter state 53
	'^'            shift, and enter state 54
	'>'            shift, and enter state 55
	'<'            shift, and enter state 56
	leq            shift, and enter state 57
	geq            shift, and enter state 58
	for            reduce using rule 40
	hence          reduce using rule 40
	otherwise      reduce using rule 40
	'/\\'          shift, and enter state 59
	'\\/'          shift, and enter state 60
	innit          reduce using rule 40
	','            reduce using rule 40
	'\\'           reduce using rule 40
	'=='           shift, and enter state 62
	doeth          reduce using rule 40
	'|'            reduce using rule 40
	'~'            shift, and enter state 63


State 96

	Expr -> bloke '(' Expr ')' .                        (rule 35)

	'+'            reduce using rule 35
	'-'            reduce using rule 35
	'*'            reduce using rule 35
	'/'            reduce using rule 35
	'('            reduce using rule 35
	')'            reduce using rule 35
	']'            reduce using rule 35
	'%'            reduce using rule 35
	'='            reduce using rule 35
	'^'            reduce using rule 35
	'>'            reduce using rule 35
	'<'            reduce using rule 35
	leq            reduce using rule 35
	geq            reduce using rule 35
	for            reduce using rule 35
	hence          reduce using rule 35
	otherwise      reduce using rule 35
	'/\\'          reduce using rule 35
	'\\/'          reduce using rule 35
	innit          reduce using rule 35
	','            reduce using rule 35
	'\\'           reduce using rule 35
	'=='           reduce using rule 35
	doeth          reduce using rule 35
	'|'            reduce using rule 35
	'~'            reduce using rule 35


State 97

	Expr -> mate '(' Expr ')' .                         (rule 34)

	'+'            reduce using rule 34
	'-'            reduce using rule 34
	'*'            reduce using rule 34
	'/'            reduce using rule 34
	'('            reduce using rule 34
	')'            reduce using rule 34
	']'            reduce using rule 34
	'%'            reduce using rule 34
	'='            reduce using rule 34
	'^'            reduce using rule 34
	'>'            reduce using rule 34
	'<'            reduce using rule 34
	leq            reduce using rule 34
	geq            reduce using rule 34
	for            reduce using rule 34
	hence          reduce using rule 34
	otherwise      reduce using rule 34
	'/\\'          reduce using rule 34
	'\\/'          reduce using rule 34
	innit          reduce using rule 34
	','            reduce using rule 34
	'\\'           reduce using rule 34
	'=='           reduce using rule 34
	doeth          reduce using rule 34
	'|'            reduce using rule 34
	'~'            reduce using rule 34


State 98

	Expr -> Expr . '+' Expr                             (rule 18)
	Expr -> Expr . '-' Expr                             (rule 19)
	Expr -> Expr . '*' Expr                             (rule 20)
	Expr -> Expr . '/' Expr                             (rule 21)
	Expr -> Expr . '^' Expr                             (rule 22)
	Expr -> Expr . '%' Expr                             (rule 23)
	Expr -> Expr . '=' Expr                             (rule 24)
	Expr -> Expr . '>' Expr                             (rule 25)
	Expr -> Expr . '<' Expr                             (rule 26)
	Expr -> Expr . '/\\' Expr                           (rule 27)
	Expr -> Expr . '\\/' Expr                           (rule 28)
	Expr -> Expr . leq Expr                             (rule 29)
	Expr -> Expr . geq Expr                             (rule 30)
	Expr -> cheers var '=>' Expr .                      (rule 38)
	Expr -> Expr . '(' Expr ')'                         (rule 39)
	Expr -> Expr . '==' Expr                            (rule 42)
	Expr -> Expr . '~' Expr                             (rule 44)

	'+'            shift, and enter state 47
	'-'            shift, and enter state 48
	'*'            shift, and enter state 49
	'/'            shift, and enter state 50
	'('            shift, and enter state 51
	')'            reduce using rule 38
	']'            reduce using rule 38
	'%'            shift, and enter state 52
	'='            shift, and enter state 53
	'^'            shift, and enter state 54
	'>'            shift, and enter state 55
	'<'            shift, and enter state 56
	leq            shift, and enter state 57
	geq            shift, and enter state 58
	for            reduce using rule 38
	hence          reduce using rule 38
	otherwise      reduce using rule 38
	'/\\'          shift, and enter state 59
	'\\/'          shift, and enter state 60
	innit          reduce using rule 38
	','            reduce using rule 38
	'\\'           reduce using rule 38
	'=='           shift, and enter state 62
	doeth          reduce using rule 38
	'|'            reduce using rule 38
	'~'            shift, and enter state 63


State 99

	Expr -> Expr . '+' Expr                             (rule 18)
	Expr -> Expr . '-' Expr                             (rule 19)
	Expr -> Expr . '*' Expr                             (rule 20)
	Expr -> Expr . '/' Expr                             (rule 21)
	Expr -> Expr . '^' Expr                             (rule 22)
	Expr -> Expr . '%' Expr                             (rule 23)
	Expr -> Expr . '=' Expr                             (rule 24)
	Expr -> Expr . '>' Expr                             (rule 25)
	Expr -> Expr . '<' Expr                             (rule 26)
	Expr -> Expr . '/\\' Expr                           (rule 27)
	Expr -> Expr . '\\/' Expr                           (rule 28)
	Expr -> Expr . leq Expr                             (rule 29)
	Expr -> Expr . geq Expr                             (rule 30)
	Expr -> oi var is Expr . for Expr                   (rule 33)
	Expr -> Expr . '(' Expr ')'                         (rule 39)
	Expr -> Expr . '==' Expr                            (rule 42)
	Expr -> Expr . '~' Expr                             (rule 44)

	'+'            shift, and enter state 47
	'-'            shift, and enter state 48
	'*'            shift, and enter state 49
	'/'            shift, and enter state 50
	'('            shift, and enter state 51
	'%'            shift, and enter state 52
	'='            shift, and enter state 53
	'^'            shift, and enter state 54
	'>'            shift, and enter state 55
	'<'            shift, and enter state 56
	leq            shift, and enter state 57
	geq            shift, and enter state 58
	for            shift, and enter state 107
	'/\\'          shift, and enter state 59
	'\\/'          shift, and enter state 60
	'=='           shift, and enter state 62
	'~'            shift, and enter state 63


State 100

	Expr -> Expr . '+' Expr                             (rule 18)
	Expr -> Expr . '-' Expr                             (rule 19)
	Expr -> Expr . '*' Expr                             (rule 20)
	Expr -> Expr . '/' Expr                             (rule 21)
	Expr -> Expr . '^' Expr                             (rule 22)
	Expr -> Expr . '%' Expr                             (rule 23)
	Expr -> Expr . '=' Expr                             (rule 24)
	Expr -> Expr . '>' Expr                             (rule 25)
	Expr -> Expr . '<' Expr                             (rule 26)
	Expr -> Expr . '/\\' Expr                           (rule 27)
	Expr -> Expr . '\\/' Expr                           (rule 28)
	Expr -> Expr . leq Expr                             (rule 29)
	Expr -> Expr . geq Expr                             (rule 30)
	Expr -> supposing Expr hence Expr . otherwise Expr    (rule 31)
	Expr -> Expr . '(' Expr ')'                         (rule 39)
	Expr -> Expr . '==' Expr                            (rule 42)
	Expr -> Expr . '~' Expr                             (rule 44)

	'+'            shift, and enter state 47
	'-'            shift, and enter state 48
	'*'            shift, and enter state 49
	'/'            shift, and enter state 50
	'('            shift, and enter state 51
	'%'            shift, and enter state 52
	'='            shift, and enter state 53
	'^'            shift, and enter state 54
	'>'            shift, and enter state 55
	'<'            shift, and enter state 56
	leq            shift, and enter state 57
	geq            shift, and enter state 58
	otherwise      shift, and enter state 106
	'/\\'          shift, and enter state 59
	'\\/'          shift, and enter state 60
	'=='           shift, and enter state 62
	'~'            shift, and enter state 63


State 101

	Expr -> Expr . '+' Expr                             (rule 18)
	Expr -> Expr . '-' Expr                             (rule 19)
	Expr -> Expr . '*' Expr                             (rule 20)
	Expr -> Expr . '/' Expr                             (rule 21)
	Expr -> Expr . '^' Expr                             (rule 22)
	Expr -> Expr . '%' Expr                             (rule 23)
	Expr -> Expr . '=' Expr                             (rule 24)
	Expr -> Expr . '>' Expr                             (rule 25)
	Expr -> Expr . '<' Expr                             (rule 26)
	Expr -> Expr . '/\\' Expr                           (rule 27)
	Expr -> Expr . '\\/' Expr                           (rule 28)
	Expr -> Expr . leq Expr                             (rule 29)
	Expr -> Expr . geq Expr                             (rule 30)
	Expr -> ifz Expr hence Expr . otherwise Expr        (rule 32)
	Expr -> Expr . '(' Expr ')'                         (rule 39)
	Expr -> Expr . '==' Expr                            (rule 42)
	Expr -> Expr . '~' Expr                             (rule 44)

	'+'            shift, and enter state 47
	'-'            shift, and enter state 48
	'*'            shift, and enter state 49
	'/'            shift, and enter state 50
	'('            shift, and enter state 51
	'%'            shift, and enter state 52
	'='            shift, and enter state 53
	'^'            shift, and enter state 54
	'>'            shift, and enter state 55
	'<'            shift, and enter state 56
	leq            shift, and enter state 57
	geq            shift, and enter state 58
	otherwise      shift, and enter state 105
	'/\\'          shift, and enter state 59
	'\\/'          shift, and enter state 60
	'=='           shift, and enter state 62
	'~'            shift, and enter state 63


State 102

	Expr -> Expr . '+' Expr                             (rule 18)
	Expr -> Expr . '-' Expr                             (rule 19)
	Expr -> Expr . '*' Expr                             (rule 20)
	Expr -> Expr . '/' Expr                             (rule 21)
	Expr -> Expr . '^' Expr                             (rule 22)
	Expr -> Expr . '%' Expr                             (rule 23)
	Expr -> Expr . '=' Expr                             (rule 24)
	Expr -> Expr . '>' Expr                             (rule 25)
	Expr -> Expr . '<' Expr                             (rule 26)
	Expr -> Expr . '/\\' Expr                           (rule 27)
	Expr -> Expr . '\\/' Expr                           (rule 28)
	Expr -> Expr . leq Expr                             (rule 29)
	Expr -> Expr . geq Expr                             (rule 30)
	Expr -> '/' Expr ',' Expr . '\\'                    (rule 36)
	Expr -> Expr . '(' Expr ')'                         (rule 39)
	Expr -> Expr . '==' Expr                            (rule 42)
	Expr -> Expr . '~' Expr                             (rule 44)

	'+'            shift, and enter state 47
	'-'            shift, and enter state 48
	'*'            shift, and enter state 49
	'/'            shift, and enter state 50
	'('            shift, and enter state 51
	'%'            shift, and enter state 52
	'='            shift, and enter state 53
	'^'            shift, and enter state 54
	'>'            shift, and enter state 55
	'<'            shift, and enter state 56
	leq            shift, and enter state 57
	geq            shift, and enter state 58
	'/\\'          shift, and enter state 59
	'\\/'          shift, and enter state 60
	'\\'           shift, and enter state 104
	'=='           shift, and enter state 62
	'~'            shift, and enter state 63


State 103

	Expr -> Expr '(' Expr ')' .                         (rule 39)

	'+'            reduce using rule 39
	'-'            reduce using rule 39
	'*'            reduce using rule 39
	'/'            reduce using rule 39
	'('            reduce using rule 39
	')'            reduce using rule 39
	']'            reduce using rule 39
	'%'            reduce using rule 39
	'='            reduce using rule 39
	'^'            reduce using rule 39
	'>'            reduce using rule 39
	'<'            reduce using rule 39
	leq            reduce using rule 39
	geq            reduce using rule 39
	for            reduce using rule 39
	hence          reduce using rule 39
	otherwise      reduce using rule 39
	'/\\'          reduce using rule 39
	'\\/'          reduce using rule 39
	innit          reduce using rule 39
	','            reduce using rule 39
	'\\'           reduce using rule 39
	'=='           reduce using rule 39
	doeth          reduce using rule 39
	'|'            reduce using rule 39
	'~'            reduce using rule 39


State 104

	Expr -> '/' Expr ',' Expr '\\' .                    (rule 36)

	'+'            reduce using rule 36
	'-'            reduce using rule 36
	'*'            reduce using rule 36
	'/'            reduce using rule 36
	'('            reduce using rule 36
	')'            reduce using rule 36
	']'            reduce using rule 36
	'%'            reduce using rule 36
	'='            reduce using rule 36
	'^'            reduce using rule 36
	'>'            reduce using rule 36
	'<'            reduce using rule 36
	leq            reduce using rule 36
	geq            reduce using rule 36
	for            reduce using rule 36
	hence          reduce using rule 36
	otherwise      reduce using rule 36
	'/\\'          reduce using rule 36
	'\\/'          reduce using rule 36
	innit          reduce using rule 36
	','            reduce using rule 36
	'\\'           reduce using rule 36
	'=='           reduce using rule 36
	doeth          reduce using rule 36
	'|'            reduce using rule 36
	'~'            reduce using rule 36


State 105

	Expr -> ifz Expr hence Expr otherwise . Expr        (rule 32)

	int            shift, and enter state 3
	real           shift, and enter state 4
	fee            shift, and enter state 5
	pie            shift, and enter state 6
	phi            shift, and enter state 7
	mole           shift, and enter state 8
	'-'            shift, and enter state 9
	'/'            shift, and enter state 10
	'('            shift, and enter state 11
	'['            shift, and enter state 12
	sqrt           shift, and enter state 13
	ifz            shift, and enter state 14
	ace            shift, and enter state 15
	rank           shift, and enter state 16
	var            shift, and enter state 17
	string         shift, and enter state 18
	supposing      shift, and enter state 19
	oi             shift, and enter state 20
	cheers         shift, and enter state 21
	mate           shift, and enter state 22
	bloke          shift, and enter state 23
	'#'            shift, and enter state 24
	display        shift, and enter state 25
	whilst         shift, and enter state 26
	'|'            shift, and enter state 27

	Expr           goto state 112

State 106

	Expr -> supposing Expr hence Expr otherwise . Expr    (rule 31)

	int            shift, and enter state 3
	real           shift, and enter state 4
	fee            shift, and enter state 5
	pie            shift, and enter state 6
	phi            shift, and enter state 7
	mole           shift, and enter state 8
	'-'            shift, and enter state 9
	'/'            shift, and enter state 10
	'('            shift, and enter state 11
	'['            shift, and enter state 12
	sqrt           shift, and enter state 13
	ifz            shift, and enter state 14
	ace            shift, and enter state 15
	rank           shift, and enter state 16
	var            shift, and enter state 17
	string         shift, and enter state 18
	supposing      shift, and enter state 19
	oi             shift, and enter state 20
	cheers         shift, and enter state 21
	mate           shift, and enter state 22
	bloke          shift, and enter state 23
	'#'            shift, and enter state 24
	display        shift, and enter state 25
	whilst         shift, and enter state 26
	'|'            shift, and enter state 27

	Expr           goto state 111

State 107

	Expr -> oi var is Expr for . Expr                   (rule 33)

	int            shift, and enter state 3
	real           shift, and enter state 4
	fee            shift, and enter state 5
	pie            shift, and enter state 6
	phi            shift, and enter state 7
	mole           shift, and enter state 8
	'-'            shift, and enter state 9
	'/'            shift, and enter state 10
	'('            shift, and enter state 11
	'['            shift, and enter state 12
	sqrt           shift, and enter state 13
	ifz            shift, and enter state 14
	ace            shift, and enter state 15
	rank           shift, and enter state 16
	var            shift, and enter state 17
	string         shift, and enter state 18
	supposing      shift, and enter state 19
	oi             shift, and enter state 20
	cheers         shift, and enter state 21
	mate           shift, and enter state 22
	bloke          shift, and enter state 23
	'#'            shift, and enter state 24
	display        shift, and enter state 25
	whilst         shift, and enter state 26
	'|'            shift, and enter state 27

	Expr           goto state 110

State 108

	Dec -> hearye var is Expr innit .                   (rule 2)

	%eof           reduce using rule 2


State 109

	Dec -> colonize var is Expr innit .                 (rule 3)

	%eof           reduce using rule 3


State 110

	Expr -> Expr . '+' Expr                             (rule 18)
	Expr -> Expr . '-' Expr                             (rule 19)
	Expr -> Expr . '*' Expr                             (rule 20)
	Expr -> Expr . '/' Expr                             (rule 21)
	Expr -> Expr . '^' Expr                             (rule 22)
	Expr -> Expr . '%' Expr                             (rule 23)
	Expr -> Expr . '=' Expr                             (rule 24)
	Expr -> Expr . '>' Expr                             (rule 25)
	Expr -> Expr . '<' Expr                             (rule 26)
	Expr -> Expr . '/\\' Expr                           (rule 27)
	Expr -> Expr . '\\/' Expr                           (rule 28)
	Expr -> Expr . leq Expr                             (rule 29)
	Expr -> Expr . geq Expr                             (rule 30)
	Expr -> oi var is Expr for Expr .                   (rule 33)
	Expr -> Expr . '(' Expr ')'                         (rule 39)
	Expr -> Expr . '==' Expr                            (rule 42)
	Expr -> Expr . '~' Expr                             (rule 44)

	'+'            shift, and enter state 47
	'-'            shift, and enter state 48
	'*'            shift, and enter state 49
	'/'            shift, and enter state 50
	'('            shift, and enter state 51
	')'            reduce using rule 33
	']'            reduce using rule 33
	'%'            shift, and enter state 52
	'='            shift, and enter state 53
	'^'            shift, and enter state 54
	'>'            shift, and enter state 55
	'<'            shift, and enter state 56
	leq            shift, and enter state 57
	geq            shift, and enter state 58
	for            reduce using rule 33
	hence          reduce using rule 33
	otherwise      reduce using rule 33
	'/\\'          shift, and enter state 59
	'\\/'          shift, and enter state 60
	innit          reduce using rule 33
	','            reduce using rule 33
	'\\'           reduce using rule 33
	'=='           shift, and enter state 62
	doeth          reduce using rule 33
	'|'            reduce using rule 33
	'~'            shift, and enter state 63


State 111

	Expr -> Expr . '+' Expr                             (rule 18)
	Expr -> Expr . '-' Expr                             (rule 19)
	Expr -> Expr . '*' Expr                             (rule 20)
	Expr -> Expr . '/' Expr                             (rule 21)
	Expr -> Expr . '^' Expr                             (rule 22)
	Expr -> Expr . '%' Expr                             (rule 23)
	Expr -> Expr . '=' Expr                             (rule 24)
	Expr -> Expr . '>' Expr                             (rule 25)
	Expr -> Expr . '<' Expr                             (rule 26)
	Expr -> Expr . '/\\' Expr                           (rule 27)
	Expr -> Expr . '\\/' Expr                           (rule 28)
	Expr -> Expr . leq Expr                             (rule 29)
	Expr -> Expr . geq Expr                             (rule 30)
	Expr -> supposing Expr hence Expr otherwise Expr .    (rule 31)
	Expr -> Expr . '(' Expr ')'                         (rule 39)
	Expr -> Expr . '==' Expr                            (rule 42)
	Expr -> Expr . '~' Expr                             (rule 44)

	'+'            shift, and enter state 47
	'-'            shift, and enter state 48
	'*'            shift, and enter state 49
	'/'            shift, and enter state 50
	'('            shift, and enter state 51
	')'            reduce using rule 31
	']'            reduce using rule 31
	'%'            shift, and enter state 52
	'='            shift, and enter state 53
	'^'            shift, and enter state 54
	'>'            shift, and enter state 55
	'<'            shift, and enter state 56
	leq            shift, and enter state 57
	geq            shift, and enter state 58
	for            reduce using rule 31
	hence          reduce using rule 31
	otherwise      reduce using rule 31
	'/\\'          shift, and enter state 59
	'\\/'          shift, and enter state 60
	innit          reduce using rule 31
	','            reduce using rule 31
	'\\'           reduce using rule 31
	'=='           shift, and enter state 62
	doeth          reduce using rule 31
	'|'            reduce using rule 31
	'~'            shift, and enter state 63


State 112

	Expr -> Expr . '+' Expr                             (rule 18)
	Expr -> Expr . '-' Expr                             (rule 19)
	Expr -> Expr . '*' Expr                             (rule 20)
	Expr -> Expr . '/' Expr                             (rule 21)
	Expr -> Expr . '^' Expr                             (rule 22)
	Expr -> Expr . '%' Expr                             (rule 23)
	Expr -> Expr . '=' Expr                             (rule 24)
	Expr -> Expr . '>' Expr                             (rule 25)
	Expr -> Expr . '<' Expr                             (rule 26)
	Expr -> Expr . '/\\' Expr                           (rule 27)
	Expr -> Expr . '\\/' Expr                           (rule 28)
	Expr -> Expr . leq Expr                             (rule 29)
	Expr -> Expr . geq Expr                             (rule 30)
	Expr -> ifz Expr hence Expr otherwise Expr .        (rule 32)
	Expr -> Expr . '(' Expr ')'                         (rule 39)
	Expr -> Expr . '==' Expr                            (rule 42)
	Expr -> Expr . '~' Expr                             (rule 44)

	'+'            shift, and enter state 47
	'-'            shift, and enter state 48
	'*'            shift, and enter state 49
	'/'            shift, and enter state 50
	'('            shift, and enter state 51
	')'            reduce using rule 32
	']'            reduce using rule 32
	'%'            shift, and enter state 52
	'='            shift, and enter state 53
	'^'            shift, and enter state 54
	'>'            shift, and enter state 55
	'<'            shift, and enter state 56
	leq            shift, and enter state 57
	geq            shift, and enter state 58
	for            reduce using rule 32
	hence          reduce using rule 32
	otherwise      reduce using rule 32
	'/\\'          shift, and enter state 59
	'\\/'          shift, and enter state 60
	innit          reduce using rule 32
	','            reduce using rule 32
	'\\'           reduce using rule 32
	'=='           shift, and enter state 62
	doeth          reduce using rule 32
	'|'            reduce using rule 32
	'~'            shift, and enter state 63


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 45
Number of terminals: 51
Number of non-terminals: 3
Number of states: 113
